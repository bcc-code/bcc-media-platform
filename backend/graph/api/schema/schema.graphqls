directive @goField(
  forceResolver: Boolean
  name: String
) on INPUT_FIELD_DEFINITION | FIELD_DEFINITION

schema {
  query: QueryRoot
  mutation: MutationRoot
}

interface Pagination {
  total: Int!
  first: Int!
  offset: Int!
}

interface CollectionItem {
  id: ID!
  title: String!
  description: String
  #image(style: ImageStyle): String
}

interface MediaItem {
  id: ID!
  streams: [Stream!]!
  files: [File!]!
  title: String!
  originalTitle: String!
  image(style: ImageStyle): String
  #duration: Int!
}

scalar Language
scalar Date
scalar UUID

type Image {
  style: String!
  url: String!
}

enum ImageStyle {
  poster
  featured
  default
}

enum Status {
  published
  unlisted
}

input LegacyIDLookupOptions {
  episodeID: Int
  programID: Int
}

type LegacyIDLookup {
  id: ID!
}

input EpisodeContext {
  collectionId: String
  playlistId: String
  shuffle: Boolean
  cursor: String
}

type RedirectLink {
  url: String!
  requiresAuthentication: Boolean!
}

type RedirectParam {
  key: String!
  value: String!
}

type QueryRoot {
  application(timestamp: String): Application!
  languages: [Language!]!

  export(
    # Only export for this groups. The groups will be filtered by the groups the users has access to.
    # NOT IMPLEMENTED YET!
    groups: [String!]
  ): Export!

  redirect(id: String!): RedirectLink!

  page(id: ID, code: String): Page!

  section(id: ID!, timestamp: String): Section!

  show(id: ID!): Show!

  season(id: ID!): Season!

  episode(id: ID!, context: EpisodeContext): Episode!

  episodes(ids: [ID!]!): [Episode!]!

  playlist(id: ID!): Playlist!

  search(
    queryString: String!
    first: Int
    offset: Int
    type: String
    minScore: Int
  ): SearchResult!

  game(id: UUID!): Game!

  short(id: UUID!): Short!

  shorts(cursor: String, limit: Int, initialShortId: UUID): ShortsPagination!

  pendingAchievements: [Achievement!]!

  achievement(id: ID!): Achievement!

  achievementGroup(id: ID!): AchievementGroup!
  achievementGroups(first: Int, offset: Int): AchievementGroupPagination!

  studyTopic(id: ID!): StudyTopic!
  studyLesson(id: ID!): Lesson!

  calendar: Calendar
  event(id: ID!): Event

  faq: FAQ!

  me: User!

  myList: UserCollection!

  userCollection(id: UUID!): UserCollection!

  config: Config!

  profiles: [Profile!]!
  profile: Profile!

  legacyIDLookup(options: LegacyIDLookupOptions): LegacyIDLookup!

  prompts(timestamp: Date): [Prompt!]!

  subscriptions: [SubscriptionTopic!]!
}
