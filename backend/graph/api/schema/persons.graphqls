type ContributionType {
    code: String!
    title: String! @goField(forceResolver: true)
}

type ContributionTypeCount {
    type: ContributionType!
    count: Int!
}

type ContentType {
    code: String!
    title: String! @goField(forceResolver: true)
}

type ContentTypeCount {
    type: ContentType!
    count: Int!
}

type ContributionsPagination implements Pagination {
    total: Int!
    first: Int!
    offset: Int!
    items: [Contribution!]!
}

union ContributionItem = Episode | Chapter

type Person {
    id: ID!
    name: String!
    image(style: ImageStyle): String @goField(forceResolver: true)
    contributionTypes: [ContributionTypeCount!]! @goField(forceResolver: true)
    contributionContentTypes: [ContentTypeCount!]! @goField(forceResolver: true)
    contributions(first: Int, offset: Int, types: [String!], contentTypes: [String!], shuffle: Boolean): ContributionsPagination! @goField(forceResolver: true)
}

type Contribution {
    type: ContributionType!
    contentType: ContentType!
    item: ContributionItem!
}
