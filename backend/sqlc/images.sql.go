// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: images.sql

package sqlc

import (
	"context"

	"github.com/google/uuid"
)

const insertStyledImage = `-- name: InsertStyledImage :one
INSERT INTO styledimages (
    id,
    style,
    language,
    file
) VALUES (
    gen_random_uuid(),
    $1,
    $2,
    $3
)
RETURNING id
`

type InsertStyledImageParams struct {
	Style    string    `db:"style" json:"style"`
	Language string    `db:"language" json:"language"`
	File     uuid.UUID `db:"file" json:"file"`
}

func (q *Queries) InsertStyledImage(ctx context.Context, arg InsertStyledImageParams) (uuid.UUID, error) {
	row := q.db.QueryRowContext(ctx, insertStyledImage, arg.Style, arg.Language, arg.File)
	var id uuid.UUID
	err := row.Scan(&id)
	return id, err
}

const insertTimedMetadataStyledImage = `-- name: InsertTimedMetadataStyledImage :one
INSERT INTO timedmetadata_styledimages (
    timedmetadata_id,
    styledimages_id
) VALUES (
    $1,
    $2
)
RETURNING id
`

type InsertTimedMetadataStyledImageParams struct {
	TimedMetadataID uuid.NullUUID `db:"timed_metadata_id" json:"timedMetadataId"`
	StyledImageID   uuid.NullUUID `db:"styled_image_id" json:"styledImageId"`
}

func (q *Queries) InsertTimedMetadataStyledImage(ctx context.Context, arg InsertTimedMetadataStyledImageParams) (int32, error) {
	row := q.db.QueryRowContext(ctx, insertTimedMetadataStyledImage, arg.TimedMetadataID, arg.StyledImageID)
	var id int32
	err := row.Scan(&id)
	return id, err
}
