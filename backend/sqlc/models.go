// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0

package sqlc

import (
	"database/sql"
	"encoding/json"
	"time"

	"github.com/google/uuid"
	"github.com/sqlc-dev/pqtype"
	null_v4 "gopkg.in/guregu/null.v4"
)

type Achievement struct {
	ID          uuid.UUID      `db:"id" json:"id"`
	Status      string         `db:"status" json:"status"`
	UserCreated uuid.NullUUID  `db:"user_created" json:"userCreated"`
	DateCreated null_v4.Time   `db:"date_created" json:"dateCreated"`
	UserUpdated uuid.NullUUID  `db:"user_updated" json:"userUpdated"`
	DateUpdated null_v4.Time   `db:"date_updated" json:"dateUpdated"`
	GroupID     uuid.NullUUID  `db:"group_id" json:"groupId"`
	Title       string         `db:"title" json:"title"`
	Description null_v4.String `db:"description" json:"description"`
	Sort        null_v4.Int    `db:"sort" json:"sort"`
}

type Achievementcondition struct {
	ID            uuid.UUID   `db:"id" json:"id"`
	Collection    string      `db:"collection" json:"collection"`
	Action        string      `db:"action" json:"action"`
	Amount        null_v4.Int `db:"amount" json:"amount"`
	AchievementID uuid.UUID   `db:"achievement_id" json:"achievementId"`
}

type AchievementconditionsStudytopic struct {
	ID                      int32     `db:"id" json:"id"`
	AchievementconditionsID uuid.UUID `db:"achievementconditions_id" json:"achievementconditionsId"`
	StudytopicsID           uuid.UUID `db:"studytopics_id" json:"studytopicsId"`
}

type Achievementgroup struct {
	ID                   uuid.UUID      `db:"id" json:"id"`
	Status               string         `db:"status" json:"status"`
	UserCreated          uuid.NullUUID  `db:"user_created" json:"userCreated"`
	DateCreated          null_v4.Time   `db:"date_created" json:"dateCreated"`
	UserUpdated          uuid.NullUUID  `db:"user_updated" json:"userUpdated"`
	DateUpdated          null_v4.Time   `db:"date_updated" json:"dateUpdated"`
	Title                null_v4.String `db:"title" json:"title"`
	TranslationsRequired bool           `db:"translations_required" json:"translationsRequired"`
}

type AchievementgroupsTranslation struct {
	ID                  int32          `db:"id" json:"id"`
	AchievementgroupsID uuid.UUID      `db:"achievementgroups_id" json:"achievementgroupsId"`
	LanguagesCode       string         `db:"languages_code" json:"languagesCode"`
	Title               null_v4.String `db:"title" json:"title"`
	Description         null_v4.String `db:"description" json:"description"`
}

type AchievementsImage struct {
	ID            uuid.UUID `db:"id" json:"id"`
	Image         uuid.UUID `db:"image" json:"image"`
	AchievementID uuid.UUID `db:"achievement_id" json:"achievementId"`
	Language      string    `db:"language" json:"language"`
}

type AchievementsTranslation struct {
	ID             int32          `db:"id" json:"id"`
	AchievementsID uuid.UUID      `db:"achievements_id" json:"achievementsId"`
	LanguagesCode  string         `db:"languages_code" json:"languagesCode"`
	Title          null_v4.String `db:"title" json:"title"`
	Description    null_v4.String `db:"description" json:"description"`
}

type Agerating struct {
	Code        string         `db:"code" json:"code"`
	DateCreated time.Time      `db:"date_created" json:"dateCreated"`
	DateUpdated time.Time      `db:"date_updated" json:"dateUpdated"`
	Sort        null_v4.Int    `db:"sort" json:"sort"`
	Title       null_v4.String `db:"title" json:"title"`
}

type AgeratingsTranslation struct {
	AgeratingsCode string         `db:"ageratings_code" json:"ageratingsCode"`
	Description    null_v4.String `db:"description" json:"description"`
	ID             int32          `db:"id" json:"id"`
	LanguagesCode  string         `db:"languages_code" json:"languagesCode"`
}

type Application struct {
	ID                            int32          `db:"id" json:"id"`
	Status                        string         `db:"status" json:"status"`
	UserCreated                   uuid.NullUUID  `db:"user_created" json:"userCreated"`
	DateCreated                   null_v4.Time   `db:"date_created" json:"dateCreated"`
	UserUpdated                   uuid.NullUUID  `db:"user_updated" json:"userUpdated"`
	DateUpdated                   null_v4.Time   `db:"date_updated" json:"dateUpdated"`
	Name                          string         `db:"name" json:"name"`
	Code                          string         `db:"code" json:"code"`
	ClientVersion                 null_v4.String `db:"client_version" json:"clientVersion"`
	PageID                        null_v4.Int    `db:"page_id" json:"pageId"`
	Default                       bool           `db:"default" json:"default"`
	SearchPageID                  null_v4.Int    `db:"search_page_id" json:"searchPageId"`
	StandaloneRelatedCollectionID null_v4.Int    `db:"standalone_related_collection_id" json:"standaloneRelatedCollectionId"`
	Uuid                          uuid.UUID      `db:"uuid" json:"uuid"`
	GroupID                       uuid.UUID      `db:"group_id" json:"groupId"`
	GamesPageID                   null_v4.Int    `db:"games_page_id" json:"gamesPageId"`
}

type Applicationgroup struct {
	ID                uuid.UUID      `db:"id" json:"id"`
	UserCreated       uuid.NullUUID  `db:"user_created" json:"userCreated"`
	DateCreated       null_v4.Time   `db:"date_created" json:"dateCreated"`
	UserUpdated       uuid.NullUUID  `db:"user_updated" json:"userUpdated"`
	DateUpdated       null_v4.Time   `db:"date_updated" json:"dateUpdated"`
	Label             string         `db:"label" json:"label"`
	SupportEmail      null_v4.String `db:"support_email" json:"supportEmail"`
	FirebaseProjectID null_v4.String `db:"firebase_project_id" json:"firebaseProjectId"`
}

type ApplicationgroupsUsergroup struct {
	ID                  int32     `db:"id" json:"id"`
	ApplicationgroupsID uuid.UUID `db:"applicationgroups_id" json:"applicationgroupsId"`
	UsergroupsCode      string    `db:"usergroups_code" json:"usergroupsCode"`
}

type ApplicationgroupsUsergroupsL struct {
	ID                  int32          `db:"id" json:"id"`
	ApplicationgroupsID uuid.NullUUID  `db:"applicationgroups_id" json:"applicationgroupsId"`
	UsergroupsCode      null_v4.String `db:"usergroups_code" json:"usergroupsCode"`
}

type Asset struct {
	DateCreated     time.Time      `db:"date_created" json:"dateCreated"`
	DateUpdated     time.Time      `db:"date_updated" json:"dateUpdated"`
	Duration        int32          `db:"duration" json:"duration"`
	EncodingVersion null_v4.String `db:"encoding_version" json:"encodingVersion"`
	ID              int32          `db:"id" json:"id"`
	LegacyID        null_v4.Int    `db:"legacy_id" json:"legacyId"`
	MainStoragePath null_v4.String `db:"main_storage_path" json:"mainStoragePath"`
	MediabankenID   null_v4.String `db:"mediabanken_id" json:"mediabankenId"`
	Name            string         `db:"name" json:"name"`
	Status          null_v4.String `db:"status" json:"status"`
	UserCreated     uuid.NullUUID  `db:"user_created" json:"userCreated"`
	UserUpdated     uuid.NullUUID  `db:"user_updated" json:"userUpdated"`
	AwsArn          null_v4.String `db:"aws_arn" json:"awsArn"`
	Source          null_v4.String `db:"source" json:"source"`
}

type Assetfile struct {
	AssetID            int32                 `db:"asset_id" json:"assetId"`
	AudioLanguageID    null_v4.String        `db:"audio_language_id" json:"audioLanguageId"`
	DateCreated        time.Time             `db:"date_created" json:"dateCreated"`
	DateUpdated        time.Time             `db:"date_updated" json:"dateUpdated"`
	ExtraMetadata      pqtype.NullRawMessage `db:"extra_metadata" json:"extraMetadata"`
	ID                 int32                 `db:"id" json:"id"`
	MimeType           string                `db:"mime_type" json:"mimeType"`
	Path               string                `db:"path" json:"path"`
	Storage            string                `db:"storage" json:"storage"`
	SubtitleLanguageID null_v4.String        `db:"subtitle_language_id" json:"subtitleLanguageId"`
	Type               string                `db:"type" json:"type"`
	UserCreated        uuid.NullUUID         `db:"user_created" json:"userCreated"`
	UserUpdated        uuid.NullUUID         `db:"user_updated" json:"userUpdated"`
	Resolution         null_v4.String        `db:"resolution" json:"resolution"`
	Size               int64                 `db:"size" json:"size"`
}

type Assetstream struct {
	AssetID          int32                 `db:"asset_id" json:"assetId"`
	DateCreated      time.Time             `db:"date_created" json:"dateCreated"`
	DateUpdated      time.Time             `db:"date_updated" json:"dateUpdated"`
	EncryptionKeyID  null_v4.String        `db:"encryption_key_id" json:"encryptionKeyId"`
	ExtraMetadata    pqtype.NullRawMessage `db:"extra_metadata" json:"extraMetadata"`
	ID               int32                 `db:"id" json:"id"`
	LegacyVideourlID null_v4.Int           `db:"legacy_videourl_id" json:"legacyVideourlId"`
	Path             string                `db:"path" json:"path"`
	Service          string                `db:"service" json:"service"`
	Status           string                `db:"status" json:"status"`
	Type             string                `db:"type" json:"type"`
	Url              string                `db:"url" json:"url"`
	UserCreated      uuid.NullUUID         `db:"user_created" json:"userCreated"`
	UserUpdated      uuid.NullUUID         `db:"user_updated" json:"userUpdated"`
	ConfigurationID  null_v4.String        `db:"configuration_id" json:"configurationId"`
}

type AssetstreamsAudioLanguage struct {
	AssetstreamsID int32  `db:"assetstreams_id" json:"assetstreamsId"`
	ID             int32  `db:"id" json:"id"`
	LanguagesCode  string `db:"languages_code" json:"languagesCode"`
}

type AssetstreamsSubtitleLanguage struct {
	AssetstreamsID int32  `db:"assetstreams_id" json:"assetstreamsId"`
	ID             int32  `db:"id" json:"id"`
	LanguagesCode  string `db:"languages_code" json:"languagesCode"`
}

type CalendarentriesTranslation struct {
	CalendarentriesID int32          `db:"calendarentries_id" json:"calendarentriesId"`
	Description       null_v4.String `db:"description" json:"description"`
	ID                int32          `db:"id" json:"id"`
	LanguagesCode     string         `db:"languages_code" json:"languagesCode"`
	Title             null_v4.String `db:"title" json:"title"`
}

type Calendarentry struct {
	DateCreated   null_v4.Time   `db:"date_created" json:"dateCreated"`
	DateUpdated   null_v4.Time   `db:"date_updated" json:"dateUpdated"`
	End           time.Time      `db:"end" json:"end"`
	EpisodeID     null_v4.Int    `db:"episode_id" json:"episodeId"`
	EventID       null_v4.Int    `db:"event_id" json:"eventId"`
	ID            int32          `db:"id" json:"id"`
	Image         uuid.NullUUID  `db:"image" json:"image"`
	ImageFromLink bool           `db:"image_from_link" json:"imageFromLink"`
	LinkType      null_v4.String `db:"link_type" json:"linkType"`
	SeasonID      null_v4.Int    `db:"season_id" json:"seasonId"`
	ShowID        null_v4.Int    `db:"show_id" json:"showId"`
	Start         time.Time      `db:"start" json:"start"`
	Status        string         `db:"status" json:"status"`
	UserCreated   uuid.NullUUID  `db:"user_created" json:"userCreated"`
	UserUpdated   uuid.NullUUID  `db:"user_updated" json:"userUpdated"`
	IsReplay      sql.NullBool   `db:"is_replay" json:"isReplay"`
	Label         null_v4.String `db:"label" json:"label"`
}

type Collection struct {
	DateCreated    time.Time             `db:"date_created" json:"dateCreated"`
	DateUpdated    time.Time             `db:"date_updated" json:"dateUpdated"`
	ID             int32                 `db:"id" json:"id"`
	Sort           null_v4.Int           `db:"sort" json:"sort"`
	UserCreated    uuid.NullUUID         `db:"user_created" json:"userCreated"`
	UserUpdated    uuid.NullUUID         `db:"user_updated" json:"userUpdated"`
	FilterType     null_v4.String        `db:"filter_type" json:"filterType"`
	Name           null_v4.String        `db:"name" json:"name"`
	QueryFilter    pqtype.NullRawMessage `db:"query_filter" json:"queryFilter"`
	AdvancedType   null_v4.String        `db:"advanced_type" json:"advancedType"`
	NumberInTitles bool                  `db:"number_in_titles" json:"numberInTitles"`
}

type CollectionsEntry struct {
	ID            int32       `db:"id" json:"id"`
	CollectionsID int32       `db:"collections_id" json:"collectionsId"`
	Item          string      `db:"item" json:"item"`
	Collection    string      `db:"collection" json:"collection"`
	Sort          null_v4.Int `db:"sort" json:"sort"`
}

type CollectionsTranslation struct {
	ID            int32          `db:"id" json:"id"`
	CollectionsID int32          `db:"collections_id" json:"collectionsId"`
	LanguagesCode string         `db:"languages_code" json:"languagesCode"`
	Slug          null_v4.String `db:"slug" json:"slug"`
	Title         null_v4.String `db:"title" json:"title"`
}

type ComputeddataCondition struct {
	ID             uuid.UUID     `db:"id" json:"id"`
	ComputeddataID uuid.NullUUID `db:"computeddata_id" json:"computeddataId"`
	Type           string        `db:"type" json:"type"`
	Operator       string        `db:"operator" json:"operator"`
	Value          string        `db:"value" json:"value"`
}

type Computeddatagroup struct {
	ID          uuid.UUID     `db:"id" json:"id"`
	Status      string        `db:"status" json:"status"`
	UserCreated uuid.NullUUID `db:"user_created" json:"userCreated"`
	DateCreated null_v4.Time  `db:"date_created" json:"dateCreated"`
	UserUpdated uuid.NullUUID `db:"user_updated" json:"userUpdated"`
	DateUpdated null_v4.Time  `db:"date_updated" json:"dateUpdated"`
	Label       string        `db:"label" json:"label"`
}

type Computeddatum struct {
	ID          uuid.UUID      `db:"id" json:"id"`
	Status      string         `db:"status" json:"status"`
	UserCreated uuid.NullUUID  `db:"user_created" json:"userCreated"`
	DateCreated null_v4.Time   `db:"date_created" json:"dateCreated"`
	UserUpdated uuid.NullUUID  `db:"user_updated" json:"userUpdated"`
	DateUpdated null_v4.Time   `db:"date_updated" json:"dateUpdated"`
	GroupID     uuid.UUID      `db:"group_id" json:"groupId"`
	Value       string         `db:"value" json:"value"`
	Label       null_v4.String `db:"label" json:"label"`
}

type Contribution struct {
	ID              int32         `db:"id" json:"id"`
	UserCreated     uuid.NullUUID `db:"user_created" json:"userCreated"`
	DateCreated     null_v4.Time  `db:"date_created" json:"dateCreated"`
	UserUpdated     uuid.NullUUID `db:"user_updated" json:"userUpdated"`
	DateUpdated     null_v4.Time  `db:"date_updated" json:"dateUpdated"`
	PersonID        uuid.UUID     `db:"person_id" json:"personId"`
	Type            string        `db:"type" json:"type"`
	MediaitemID     uuid.NullUUID `db:"mediaitem_id" json:"mediaitemId"`
	TimedmetadataID uuid.NullUUID `db:"timedmetadata_id" json:"timedmetadataId"`
}

type DirectusActivity struct {
	ID         int32          `db:"id" json:"id"`
	Action     string         `db:"action" json:"action"`
	User       uuid.NullUUID  `db:"user" json:"user"`
	Timestamp  time.Time      `db:"timestamp" json:"timestamp"`
	Ip         null_v4.String `db:"ip" json:"ip"`
	UserAgent  null_v4.String `db:"user_agent" json:"userAgent"`
	Collection string         `db:"collection" json:"collection"`
	Item       string         `db:"item" json:"item"`
	Comment    null_v4.String `db:"comment" json:"comment"`
	Origin     null_v4.String `db:"origin" json:"origin"`
}

type DirectusCollection struct {
	Collection            string                `db:"collection" json:"collection"`
	Icon                  null_v4.String        `db:"icon" json:"icon"`
	Note                  null_v4.String        `db:"note" json:"note"`
	DisplayTemplate       null_v4.String        `db:"display_template" json:"displayTemplate"`
	Hidden                bool                  `db:"hidden" json:"hidden"`
	Singleton             bool                  `db:"singleton" json:"singleton"`
	Translations          pqtype.NullRawMessage `db:"translations" json:"translations"`
	ArchiveField          null_v4.String        `db:"archive_field" json:"archiveField"`
	ArchiveAppFilter      bool                  `db:"archive_app_filter" json:"archiveAppFilter"`
	ArchiveValue          null_v4.String        `db:"archive_value" json:"archiveValue"`
	UnarchiveValue        null_v4.String        `db:"unarchive_value" json:"unarchiveValue"`
	SortField             null_v4.String        `db:"sort_field" json:"sortField"`
	Accountability        null_v4.String        `db:"accountability" json:"accountability"`
	Color                 null_v4.String        `db:"color" json:"color"`
	ItemDuplicationFields pqtype.NullRawMessage `db:"item_duplication_fields" json:"itemDuplicationFields"`
	Sort                  null_v4.Int           `db:"sort" json:"sort"`
	Group                 null_v4.String        `db:"group" json:"group"`
	Collapse              string                `db:"collapse" json:"collapse"`
	PreviewUrl            null_v4.String        `db:"preview_url" json:"previewUrl"`
	Versioning            bool                  `db:"versioning" json:"versioning"`
}

type DirectusDashboard struct {
	ID          uuid.UUID      `db:"id" json:"id"`
	Name        string         `db:"name" json:"name"`
	Icon        string         `db:"icon" json:"icon"`
	Note        null_v4.String `db:"note" json:"note"`
	DateCreated null_v4.Time   `db:"date_created" json:"dateCreated"`
	UserCreated uuid.NullUUID  `db:"user_created" json:"userCreated"`
	Color       null_v4.String `db:"color" json:"color"`
}

type DirectusExtension struct {
	Name    string `db:"name" json:"name"`
	Enabled bool   `db:"enabled" json:"enabled"`
}

type DirectusField struct {
	ID                int32                 `db:"id" json:"id"`
	Collection        string                `db:"collection" json:"collection"`
	Field             string                `db:"field" json:"field"`
	Special           null_v4.String        `db:"special" json:"special"`
	Interface         null_v4.String        `db:"interface" json:"interface"`
	Options           pqtype.NullRawMessage `db:"options" json:"options"`
	Display           null_v4.String        `db:"display" json:"display"`
	DisplayOptions    pqtype.NullRawMessage `db:"display_options" json:"displayOptions"`
	Readonly          bool                  `db:"readonly" json:"readonly"`
	Hidden            bool                  `db:"hidden" json:"hidden"`
	Sort              null_v4.Int           `db:"sort" json:"sort"`
	Width             null_v4.String        `db:"width" json:"width"`
	Translations      pqtype.NullRawMessage `db:"translations" json:"translations"`
	Note              null_v4.String        `db:"note" json:"note"`
	Conditions        pqtype.NullRawMessage `db:"conditions" json:"conditions"`
	Required          sql.NullBool          `db:"required" json:"required"`
	Group             null_v4.String        `db:"group" json:"group"`
	Validation        pqtype.NullRawMessage `db:"validation" json:"validation"`
	ValidationMessage null_v4.String        `db:"validation_message" json:"validationMessage"`
}

type DirectusFile struct {
	ID               uuid.UUID             `db:"id" json:"id"`
	Storage          string                `db:"storage" json:"storage"`
	FilenameDisk     null_v4.String        `db:"filename_disk" json:"filenameDisk"`
	FilenameDownload string                `db:"filename_download" json:"filenameDownload"`
	Title            null_v4.String        `db:"title" json:"title"`
	Type             null_v4.String        `db:"type" json:"type"`
	Folder           uuid.NullUUID         `db:"folder" json:"folder"`
	UploadedBy       uuid.NullUUID         `db:"uploaded_by" json:"uploadedBy"`
	UploadedOn       time.Time             `db:"uploaded_on" json:"uploadedOn"`
	ModifiedBy       uuid.NullUUID         `db:"modified_by" json:"modifiedBy"`
	ModifiedOn       time.Time             `db:"modified_on" json:"modifiedOn"`
	Charset          null_v4.String        `db:"charset" json:"charset"`
	Filesize         null_v4.Int           `db:"filesize" json:"filesize"`
	Width            null_v4.Int           `db:"width" json:"width"`
	Height           null_v4.Int           `db:"height" json:"height"`
	Duration         null_v4.Int           `db:"duration" json:"duration"`
	Embed            null_v4.String        `db:"embed" json:"embed"`
	Description      null_v4.String        `db:"description" json:"description"`
	Location         null_v4.String        `db:"location" json:"location"`
	Tags             null_v4.String        `db:"tags" json:"tags"`
	Metadata         pqtype.NullRawMessage `db:"metadata" json:"metadata"`
}

type DirectusFlow struct {
	ID             uuid.UUID             `db:"id" json:"id"`
	Name           string                `db:"name" json:"name"`
	Icon           null_v4.String        `db:"icon" json:"icon"`
	Color          null_v4.String        `db:"color" json:"color"`
	Description    null_v4.String        `db:"description" json:"description"`
	Status         string                `db:"status" json:"status"`
	Trigger        null_v4.String        `db:"trigger" json:"trigger"`
	Accountability null_v4.String        `db:"accountability" json:"accountability"`
	Options        pqtype.NullRawMessage `db:"options" json:"options"`
	Operation      uuid.NullUUID         `db:"operation" json:"operation"`
	DateCreated    null_v4.Time          `db:"date_created" json:"dateCreated"`
	UserCreated    uuid.NullUUID         `db:"user_created" json:"userCreated"`
}

type DirectusFolder struct {
	ID     uuid.UUID     `db:"id" json:"id"`
	Name   string        `db:"name" json:"name"`
	Parent uuid.NullUUID `db:"parent" json:"parent"`
}

type DirectusMigration struct {
	Version   string       `db:"version" json:"version"`
	Name      string       `db:"name" json:"name"`
	Timestamp null_v4.Time `db:"timestamp" json:"timestamp"`
}

type DirectusNotification struct {
	ID         int32          `db:"id" json:"id"`
	Timestamp  null_v4.Time   `db:"timestamp" json:"timestamp"`
	Status     null_v4.String `db:"status" json:"status"`
	Recipient  uuid.UUID      `db:"recipient" json:"recipient"`
	Sender     uuid.NullUUID  `db:"sender" json:"sender"`
	Subject    string         `db:"subject" json:"subject"`
	Message    null_v4.String `db:"message" json:"message"`
	Collection null_v4.String `db:"collection" json:"collection"`
	Item       null_v4.String `db:"item" json:"item"`
}

type DirectusOperation struct {
	ID          uuid.UUID             `db:"id" json:"id"`
	Name        null_v4.String        `db:"name" json:"name"`
	Key         string                `db:"key" json:"key"`
	Type        string                `db:"type" json:"type"`
	PositionX   int32                 `db:"position_x" json:"positionX"`
	PositionY   int32                 `db:"position_y" json:"positionY"`
	Options     pqtype.NullRawMessage `db:"options" json:"options"`
	Resolve     uuid.NullUUID         `db:"resolve" json:"resolve"`
	Reject      uuid.NullUUID         `db:"reject" json:"reject"`
	Flow        uuid.UUID             `db:"flow" json:"flow"`
	DateCreated null_v4.Time          `db:"date_created" json:"dateCreated"`
	UserCreated uuid.NullUUID         `db:"user_created" json:"userCreated"`
}

type DirectusPanel struct {
	ID          uuid.UUID             `db:"id" json:"id"`
	Dashboard   uuid.UUID             `db:"dashboard" json:"dashboard"`
	Name        null_v4.String        `db:"name" json:"name"`
	Icon        null_v4.String        `db:"icon" json:"icon"`
	Color       null_v4.String        `db:"color" json:"color"`
	ShowHeader  bool                  `db:"show_header" json:"showHeader"`
	Note        null_v4.String        `db:"note" json:"note"`
	Type        string                `db:"type" json:"type"`
	PositionX   int32                 `db:"position_x" json:"positionX"`
	PositionY   int32                 `db:"position_y" json:"positionY"`
	Width       int32                 `db:"width" json:"width"`
	Height      int32                 `db:"height" json:"height"`
	Options     pqtype.NullRawMessage `db:"options" json:"options"`
	DateCreated null_v4.Time          `db:"date_created" json:"dateCreated"`
	UserCreated uuid.NullUUID         `db:"user_created" json:"userCreated"`
}

type DirectusPermission struct {
	ID          int32                 `db:"id" json:"id"`
	Role        uuid.NullUUID         `db:"role" json:"role"`
	Collection  string                `db:"collection" json:"collection"`
	Action      string                `db:"action" json:"action"`
	Permissions pqtype.NullRawMessage `db:"permissions" json:"permissions"`
	Validation  pqtype.NullRawMessage `db:"validation" json:"validation"`
	Presets     pqtype.NullRawMessage `db:"presets" json:"presets"`
	Fields      null_v4.String        `db:"fields" json:"fields"`
}

type DirectusPreset struct {
	ID              int32                 `db:"id" json:"id"`
	Bookmark        null_v4.String        `db:"bookmark" json:"bookmark"`
	User            uuid.NullUUID         `db:"user" json:"user"`
	Role            uuid.NullUUID         `db:"role" json:"role"`
	Collection      null_v4.String        `db:"collection" json:"collection"`
	Search          null_v4.String        `db:"search" json:"search"`
	Layout          null_v4.String        `db:"layout" json:"layout"`
	LayoutQuery     pqtype.NullRawMessage `db:"layout_query" json:"layoutQuery"`
	LayoutOptions   pqtype.NullRawMessage `db:"layout_options" json:"layoutOptions"`
	RefreshInterval null_v4.Int           `db:"refresh_interval" json:"refreshInterval"`
	Filter          pqtype.NullRawMessage `db:"filter" json:"filter"`
	Icon            null_v4.String        `db:"icon" json:"icon"`
	Color           null_v4.String        `db:"color" json:"color"`
}

type DirectusRelation struct {
	ID                    int32          `db:"id" json:"id"`
	ManyCollection        string         `db:"many_collection" json:"manyCollection"`
	ManyField             string         `db:"many_field" json:"manyField"`
	OneCollection         null_v4.String `db:"one_collection" json:"oneCollection"`
	OneField              null_v4.String `db:"one_field" json:"oneField"`
	OneCollectionField    null_v4.String `db:"one_collection_field" json:"oneCollectionField"`
	OneAllowedCollections null_v4.String `db:"one_allowed_collections" json:"oneAllowedCollections"`
	JunctionField         null_v4.String `db:"junction_field" json:"junctionField"`
	SortField             null_v4.String `db:"sort_field" json:"sortField"`
	OneDeselectAction     string         `db:"one_deselect_action" json:"oneDeselectAction"`
}

type DirectusRevision struct {
	ID         int32                 `db:"id" json:"id"`
	Activity   int32                 `db:"activity" json:"activity"`
	Collection string                `db:"collection" json:"collection"`
	Item       string                `db:"item" json:"item"`
	Data       pqtype.NullRawMessage `db:"data" json:"data"`
	Delta      pqtype.NullRawMessage `db:"delta" json:"delta"`
	Parent     null_v4.Int           `db:"parent" json:"parent"`
	Version    uuid.NullUUID         `db:"version" json:"version"`
}

type DirectusRole struct {
	ID          uuid.UUID      `db:"id" json:"id"`
	Name        string         `db:"name" json:"name"`
	Icon        string         `db:"icon" json:"icon"`
	Description null_v4.String `db:"description" json:"description"`
	IpAccess    null_v4.String `db:"ip_access" json:"ipAccess"`
	EnforceTfa  bool           `db:"enforce_tfa" json:"enforceTfa"`
	AdminAccess bool           `db:"admin_access" json:"adminAccess"`
	AppAccess   bool           `db:"app_access" json:"appAccess"`
}

type DirectusSession struct {
	Token     string         `db:"token" json:"token"`
	User      uuid.NullUUID  `db:"user" json:"user"`
	Expires   time.Time      `db:"expires" json:"expires"`
	Ip        null_v4.String `db:"ip" json:"ip"`
	UserAgent null_v4.String `db:"user_agent" json:"userAgent"`
	Share     uuid.NullUUID  `db:"share" json:"share"`
	Origin    null_v4.String `db:"origin" json:"origin"`
}

type DirectusSetting struct {
	ID                    int32                 `db:"id" json:"id"`
	ProjectName           string                `db:"project_name" json:"projectName"`
	ProjectUrl            null_v4.String        `db:"project_url" json:"projectUrl"`
	ProjectColor          string                `db:"project_color" json:"projectColor"`
	ProjectLogo           uuid.NullUUID         `db:"project_logo" json:"projectLogo"`
	PublicForeground      uuid.NullUUID         `db:"public_foreground" json:"publicForeground"`
	PublicBackground      uuid.NullUUID         `db:"public_background" json:"publicBackground"`
	PublicNote            null_v4.String        `db:"public_note" json:"publicNote"`
	AuthLoginAttempts     null_v4.Int           `db:"auth_login_attempts" json:"authLoginAttempts"`
	AuthPasswordPolicy    null_v4.String        `db:"auth_password_policy" json:"authPasswordPolicy"`
	StorageAssetTransform null_v4.String        `db:"storage_asset_transform" json:"storageAssetTransform"`
	StorageAssetPresets   pqtype.NullRawMessage `db:"storage_asset_presets" json:"storageAssetPresets"`
	CustomCss             null_v4.String        `db:"custom_css" json:"customCss"`
	StorageDefaultFolder  uuid.NullUUID         `db:"storage_default_folder" json:"storageDefaultFolder"`
	Basemaps              pqtype.NullRawMessage `db:"basemaps" json:"basemaps"`
	MapboxKey             null_v4.String        `db:"mapbox_key" json:"mapboxKey"`
	ModuleBar             pqtype.NullRawMessage `db:"module_bar" json:"moduleBar"`
	ProjectDescriptor     null_v4.String        `db:"project_descriptor" json:"projectDescriptor"`
	DefaultLanguage       string                `db:"default_language" json:"defaultLanguage"`
	CustomAspectRatios    pqtype.NullRawMessage `db:"custom_aspect_ratios" json:"customAspectRatios"`
	PublicFavicon         uuid.NullUUID         `db:"public_favicon" json:"publicFavicon"`
	DefaultAppearance     string                `db:"default_appearance" json:"defaultAppearance"`
	DefaultThemeLight     null_v4.String        `db:"default_theme_light" json:"defaultThemeLight"`
	ThemeLightOverrides   pqtype.NullRawMessage `db:"theme_light_overrides" json:"themeLightOverrides"`
	DefaultThemeDark      null_v4.String        `db:"default_theme_dark" json:"defaultThemeDark"`
	ThemeDarkOverrides    pqtype.NullRawMessage `db:"theme_dark_overrides" json:"themeDarkOverrides"`
}

type DirectusShare struct {
	ID          uuid.UUID      `db:"id" json:"id"`
	Name        null_v4.String `db:"name" json:"name"`
	Collection  string         `db:"collection" json:"collection"`
	Item        string         `db:"item" json:"item"`
	Role        uuid.NullUUID  `db:"role" json:"role"`
	Password    null_v4.String `db:"password" json:"password"`
	UserCreated uuid.NullUUID  `db:"user_created" json:"userCreated"`
	DateCreated null_v4.Time   `db:"date_created" json:"dateCreated"`
	DateStart   null_v4.Time   `db:"date_start" json:"dateStart"`
	DateEnd     null_v4.Time   `db:"date_end" json:"dateEnd"`
	TimesUsed   null_v4.Int    `db:"times_used" json:"timesUsed"`
	MaxUses     null_v4.Int    `db:"max_uses" json:"maxUses"`
}

type DirectusTranslation struct {
	ID       uuid.UUID `db:"id" json:"id"`
	Language string    `db:"language" json:"language"`
	Key      string    `db:"key" json:"key"`
	Value    string    `db:"value" json:"value"`
}

type DirectusUser struct {
	ID                  uuid.UUID             `db:"id" json:"id"`
	FirstName           null_v4.String        `db:"first_name" json:"firstName"`
	LastName            null_v4.String        `db:"last_name" json:"lastName"`
	Email               null_v4.String        `db:"email" json:"email"`
	Password            null_v4.String        `db:"password" json:"password"`
	Location            null_v4.String        `db:"location" json:"location"`
	Title               null_v4.String        `db:"title" json:"title"`
	Description         null_v4.String        `db:"description" json:"description"`
	Tags                pqtype.NullRawMessage `db:"tags" json:"tags"`
	Avatar              uuid.NullUUID         `db:"avatar" json:"avatar"`
	Language            null_v4.String        `db:"language" json:"language"`
	TfaSecret           null_v4.String        `db:"tfa_secret" json:"tfaSecret"`
	Status              string                `db:"status" json:"status"`
	Role                uuid.NullUUID         `db:"role" json:"role"`
	Token               null_v4.String        `db:"token" json:"token"`
	LastAccess          null_v4.Time          `db:"last_access" json:"lastAccess"`
	LastPage            null_v4.String        `db:"last_page" json:"lastPage"`
	Provider            string                `db:"provider" json:"provider"`
	ExternalIdentifier  null_v4.String        `db:"external_identifier" json:"externalIdentifier"`
	AuthData            pqtype.NullRawMessage `db:"auth_data" json:"authData"`
	EmailNotifications  sql.NullBool          `db:"email_notifications" json:"emailNotifications"`
	Appearance          null_v4.String        `db:"appearance" json:"appearance"`
	ThemeDark           null_v4.String        `db:"theme_dark" json:"themeDark"`
	ThemeLight          null_v4.String        `db:"theme_light" json:"themeLight"`
	ThemeLightOverrides pqtype.NullRawMessage `db:"theme_light_overrides" json:"themeLightOverrides"`
	ThemeDarkOverrides  pqtype.NullRawMessage `db:"theme_dark_overrides" json:"themeDarkOverrides"`
}

type DirectusVersion struct {
	ID          uuid.UUID      `db:"id" json:"id"`
	Key         string         `db:"key" json:"key"`
	Name        null_v4.String `db:"name" json:"name"`
	Collection  string         `db:"collection" json:"collection"`
	Item        string         `db:"item" json:"item"`
	Hash        null_v4.String `db:"hash" json:"hash"`
	DateCreated null_v4.Time   `db:"date_created" json:"dateCreated"`
	DateUpdated null_v4.Time   `db:"date_updated" json:"dateUpdated"`
	UserCreated uuid.NullUUID  `db:"user_created" json:"userCreated"`
	UserUpdated uuid.NullUUID  `db:"user_updated" json:"userUpdated"`
}

type DirectusWebhook struct {
	ID          int32                 `db:"id" json:"id"`
	Name        string                `db:"name" json:"name"`
	Method      string                `db:"method" json:"method"`
	Url         string                `db:"url" json:"url"`
	Status      string                `db:"status" json:"status"`
	Data        bool                  `db:"data" json:"data"`
	Actions     string                `db:"actions" json:"actions"`
	Collections string                `db:"collections" json:"collections"`
	Headers     pqtype.NullRawMessage `db:"headers" json:"headers"`
}

type Episode struct {
	AgeratingCode            null_v4.String        `db:"agerating_code" json:"ageratingCode"`
	AssetID                  null_v4.Int           `db:"asset_id" json:"assetId"`
	AvailableFrom            null_v4.Time          `db:"available_from" json:"availableFrom"`
	AvailableTo              null_v4.Time          `db:"available_to" json:"availableTo"`
	DateCreated              time.Time             `db:"date_created" json:"dateCreated"`
	DateUpdated              time.Time             `db:"date_updated" json:"dateUpdated"`
	EpisodeNumber            null_v4.Int           `db:"episode_number" json:"episodeNumber"`
	ID                       int32                 `db:"id" json:"id"`
	ImageFileID              uuid.NullUUID         `db:"image_file_id" json:"imageFileId"`
	LegacyDescriptionID      null_v4.Int           `db:"legacy_description_id" json:"legacyDescriptionId"`
	LegacyExtraDescriptionID null_v4.Int           `db:"legacy_extra_description_id" json:"legacyExtraDescriptionId"`
	LegacyID                 null_v4.Int           `db:"legacy_id" json:"legacyId"`
	LegacyProgramID          null_v4.Int           `db:"legacy_program_id" json:"legacyProgramId"`
	LegacyTagsID             null_v4.Int           `db:"legacy_tags_id" json:"legacyTagsId"`
	LegacyTitleID            null_v4.Int           `db:"legacy_title_id" json:"legacyTitleId"`
	MigrationData            pqtype.NullRawMessage `db:"migration_data" json:"migrationData"`
	PublishDate              null_v4.Time          `db:"publish_date" json:"publishDate"`
	SeasonID                 null_v4.Int           `db:"season_id" json:"seasonId"`
	Status                   string                `db:"status" json:"status"`
	Type                     string                `db:"type" json:"type"`
	UserCreated              uuid.NullUUID         `db:"user_created" json:"userCreated"`
	UserUpdated              uuid.NullUUID         `db:"user_updated" json:"userUpdated"`
	PublishDateInTitle       sql.NullBool          `db:"publish_date_in_title" json:"publishDateInTitle"`
	Label                    null_v4.String        `db:"label" json:"label"`
	ProductionDate           null_v4.Time          `db:"production_date" json:"productionDate"`
	PublicTitle              null_v4.String        `db:"public_title" json:"publicTitle"`
	PreventPublicIndexing    sql.NullBool          `db:"prevent_public_indexing" json:"preventPublicIndexing"`
	Uuid                     uuid.UUID             `db:"uuid" json:"uuid"`
	ContentType              null_v4.String        `db:"content_type" json:"contentType"`
	Audience                 null_v4.String        `db:"audience" json:"audience"`
	TimedmetadataFromAsset   bool                  `db:"timedmetadata_from_asset" json:"timedmetadataFromAsset"`
	TranslationsRequired     bool                  `db:"translations_required" json:"translationsRequired"`
	MediaitemID              uuid.NullUUID         `db:"mediaitem_id" json:"mediaitemId"`
}

type EpisodeAvailability struct {
	ID            int32        `db:"id" json:"id"`
	Published     sql.NullBool `db:"published" json:"published"`
	AvailableFrom interface{}  `db:"available_from" json:"availableFrom"`
	AvailableTo   interface{}  `db:"available_to" json:"availableTo"`
	PublishedOn   interface{}  `db:"published_on" json:"publishedOn"`
}

type EpisodeRole struct {
	ID               int32       `db:"id" json:"id"`
	Roles            interface{} `db:"roles" json:"roles"`
	RolesDownload    interface{} `db:"roles_download" json:"rolesDownload"`
	RolesEarlyaccess interface{} `db:"roles_earlyaccess" json:"rolesEarlyaccess"`
}

type EpisodesAsset struct {
	ID         int32       `db:"id" json:"id"`
	EpisodesID null_v4.Int `db:"episodes_id" json:"episodesId"`
	AssetsID   null_v4.Int `db:"assets_id" json:"assetsId"`
	Language   string      `db:"language" json:"language"`
}

type EpisodesTag struct {
	EpisodesID int32 `db:"episodes_id" json:"episodesId"`
	ID         int32 `db:"id" json:"id"`
	TagsID     int32 `db:"tags_id" json:"tagsId"`
}

type EpisodesTranslation struct {
	Description      null_v4.String `db:"description" json:"description"`
	EpisodesID       int32          `db:"episodes_id" json:"episodesId"`
	ExtraDescription null_v4.String `db:"extra_description" json:"extraDescription"`
	ID               int32          `db:"id" json:"id"`
	IsPrimary        bool           `db:"is_primary" json:"isPrimary"`
	LanguagesCode    string         `db:"languages_code" json:"languagesCode"`
	Title            null_v4.String `db:"title" json:"title"`
}

type EpisodesUsergroup struct {
	EpisodesID     int32          `db:"episodes_id" json:"episodesId"`
	ID             int32          `db:"id" json:"id"`
	Type           null_v4.String `db:"type" json:"type"`
	UsergroupsCode string         `db:"usergroups_code" json:"usergroupsCode"`
	DateCreated    time.Time      `db:"date_created" json:"dateCreated"`
	DateUpdated    null_v4.Time   `db:"date_updated" json:"dateUpdated"`
}

type EpisodesUsergroupsDownload struct {
	EpisodesID     int32     `db:"episodes_id" json:"episodesId"`
	ID             int32     `db:"id" json:"id"`
	UsergroupsCode string    `db:"usergroups_code" json:"usergroupsCode"`
	DateCreated    time.Time `db:"date_created" json:"dateCreated"`
	DateUpdated    time.Time `db:"date_updated" json:"dateUpdated"`
}

type EpisodesUsergroupsEarlyaccess struct {
	EpisodesID     int32     `db:"episodes_id" json:"episodesId"`
	ID             int32     `db:"id" json:"id"`
	UsergroupsCode string    `db:"usergroups_code" json:"usergroupsCode"`
	DateCreated    time.Time `db:"date_created" json:"dateCreated"`
	DateUpdated    time.Time `db:"date_updated" json:"dateUpdated"`
}

type Event struct {
	DateCreated null_v4.Time  `db:"date_created" json:"dateCreated"`
	DateUpdated null_v4.Time  `db:"date_updated" json:"dateUpdated"`
	End         time.Time     `db:"end" json:"end"`
	ID          int32         `db:"id" json:"id"`
	Start       time.Time     `db:"start" json:"start"`
	Status      string        `db:"status" json:"status"`
	UserCreated uuid.NullUUID `db:"user_created" json:"userCreated"`
	UserUpdated uuid.NullUUID `db:"user_updated" json:"userUpdated"`
}

type EventsTranslation struct {
	Description   null_v4.String `db:"description" json:"description"`
	EventsID      int32          `db:"events_id" json:"eventsId"`
	ID            int32          `db:"id" json:"id"`
	LanguagesCode string         `db:"languages_code" json:"languagesCode"`
	Title         null_v4.String `db:"title" json:"title"`
}

type Faq struct {
	ID                   uuid.UUID     `db:"id" json:"id"`
	Status               string        `db:"status" json:"status"`
	Sort                 null_v4.Int   `db:"sort" json:"sort"`
	UserCreated          uuid.NullUUID `db:"user_created" json:"userCreated"`
	DateCreated          null_v4.Time  `db:"date_created" json:"dateCreated"`
	UserUpdated          uuid.NullUUID `db:"user_updated" json:"userUpdated"`
	DateUpdated          null_v4.Time  `db:"date_updated" json:"dateUpdated"`
	Question             string        `db:"question" json:"question"`
	Answer               string        `db:"answer" json:"answer"`
	CategoryID           uuid.UUID     `db:"category_id" json:"categoryId"`
	TranslationsRequired bool          `db:"translations_required" json:"translationsRequired"`
}

type FaqcategoriesTranslation struct {
	ID              int32          `db:"id" json:"id"`
	FaqcategoriesID uuid.UUID      `db:"faqcategories_id" json:"faqcategoriesId"`
	LanguagesCode   string         `db:"languages_code" json:"languagesCode"`
	Description     null_v4.String `db:"description" json:"description"`
	Title           null_v4.String `db:"title" json:"title"`
}

type Faqcategory struct {
	ID          uuid.UUID      `db:"id" json:"id"`
	Status      string         `db:"status" json:"status"`
	Sort        null_v4.Int    `db:"sort" json:"sort"`
	UserCreated uuid.NullUUID  `db:"user_created" json:"userCreated"`
	DateCreated null_v4.Time   `db:"date_created" json:"dateCreated"`
	UserUpdated uuid.NullUUID  `db:"user_updated" json:"userUpdated"`
	DateUpdated null_v4.Time   `db:"date_updated" json:"dateUpdated"`
	Title       string         `db:"title" json:"title"`
	Description null_v4.String `db:"description" json:"description"`
}

type FaqsTranslation struct {
	ID            int32          `db:"id" json:"id"`
	FaqsID        uuid.UUID      `db:"faqs_id" json:"faqsId"`
	LanguagesCode string         `db:"languages_code" json:"languagesCode"`
	Question      null_v4.String `db:"question" json:"question"`
	Answer        null_v4.String `db:"answer" json:"answer"`
}

type FaqsUsergroup struct {
	ID             int32     `db:"id" json:"id"`
	FaqsID         uuid.UUID `db:"faqs_id" json:"faqsId"`
	UsergroupsCode string    `db:"usergroups_code" json:"usergroupsCode"`
}

type FilterDataset struct {
	Collection    string         `db:"collection" json:"collection"`
	ID            int32          `db:"id" json:"id"`
	Uuid          uuid.UUID      `db:"uuid" json:"uuid"`
	SeasonID      int32          `db:"season_id" json:"seasonId"`
	ShowID        int32          `db:"show_id" json:"showId"`
	AgeratingCode null_v4.String `db:"agerating_code" json:"ageratingCode"`
	Number        null_v4.Int    `db:"number" json:"number"`
	Type          string         `db:"type" json:"type"`
	PublishDate   null_v4.Time   `db:"publish_date" json:"publishDate"`
	Published     sql.NullBool   `db:"published" json:"published"`
	AvailableFrom interface{}    `db:"available_from" json:"availableFrom"`
	AvailableTo   interface{}    `db:"available_to" json:"availableTo"`
	Roles         interface{}    `db:"roles" json:"roles"`
	Tags          interface{}    `db:"tags" json:"tags"`
}

type Game struct {
	ID                   uuid.UUID      `db:"id" json:"id"`
	Status               string         `db:"status" json:"status"`
	UserCreated          uuid.NullUUID  `db:"user_created" json:"userCreated"`
	DateCreated          null_v4.Time   `db:"date_created" json:"dateCreated"`
	UserUpdated          uuid.NullUUID  `db:"user_updated" json:"userUpdated"`
	DateUpdated          null_v4.Time   `db:"date_updated" json:"dateUpdated"`
	Title                string         `db:"title" json:"title"`
	Description          null_v4.String `db:"description" json:"description"`
	LinkID               int32          `db:"link_id" json:"linkId"`
	TranslationsRequired bool           `db:"translations_required" json:"translationsRequired"`
}

type GamesStyledimage struct {
	ID             int32     `db:"id" json:"id"`
	GamesID        uuid.UUID `db:"games_id" json:"gamesId"`
	StyledimagesID uuid.UUID `db:"styledimages_id" json:"styledimagesId"`
}

type GamesTranslation struct {
	ID            int32          `db:"id" json:"id"`
	GamesID       uuid.UUID      `db:"games_id" json:"gamesId"`
	LanguagesCode string         `db:"languages_code" json:"languagesCode"`
	Title         null_v4.String `db:"title" json:"title"`
	Description   null_v4.String `db:"description" json:"description"`
}

type GamesUsergroup struct {
	ID             int32     `db:"id" json:"id"`
	GamesID        uuid.UUID `db:"games_id" json:"gamesId"`
	UsergroupsCode string    `db:"usergroups_code" json:"usergroupsCode"`
}

type Globalconfig struct {
	DateUpdated time.Time    `db:"date_updated" json:"dateUpdated"`
	ID          int32        `db:"id" json:"id"`
	LiveOnline  sql.NullBool `db:"live_online" json:"liveOnline"`
	NpawEnabled sql.NullBool `db:"npaw_enabled" json:"npawEnabled"`
	UserUpdated uuid.UUID    `db:"user_updated" json:"userUpdated"`
}

type GooseDbVersion struct {
	ID        int32        `db:"id" json:"id"`
	VersionID int64        `db:"version_id" json:"versionId"`
	IsApplied bool         `db:"is_applied" json:"isApplied"`
	Tstamp    null_v4.Time `db:"tstamp" json:"tstamp"`
}

type Image struct {
	ID                     int32         `db:"id" json:"id"`
	UserCreated            uuid.NullUUID `db:"user_created" json:"userCreated"`
	DateCreated            null_v4.Time  `db:"date_created" json:"dateCreated"`
	UserUpdated            uuid.NullUUID `db:"user_updated" json:"userUpdated"`
	DateUpdated            null_v4.Time  `db:"date_updated" json:"dateUpdated"`
	ShowID                 null_v4.Int   `db:"show_id" json:"showId"`
	SeasonID               null_v4.Int   `db:"season_id" json:"seasonId"`
	EpisodeID              null_v4.Int   `db:"episode_id" json:"episodeId"`
	Style                  string        `db:"style" json:"style"`
	File                   uuid.NullUUID `db:"file" json:"file"`
	Language               string        `db:"language" json:"language"`
	PageID                 null_v4.Int   `db:"page_id" json:"pageId"`
	LinkID                 null_v4.Int   `db:"link_id" json:"linkId"`
	NotificationtemplateID uuid.NullUUID `db:"notificationtemplate_id" json:"notificationtemplateId"`
}

type Language struct {
	Code              string         `db:"code" json:"code"`
	Legacy2LetterCode null_v4.String `db:"legacy_2_letter_code" json:"legacy2LetterCode"`
	Legacy3LetterCode null_v4.String `db:"legacy_3_letter_code" json:"legacy3LetterCode"`
	Name              null_v4.String `db:"name" json:"name"`
}

type Lesson struct {
	ID                   uuid.UUID      `db:"id" json:"id"`
	Status               string         `db:"status" json:"status"`
	UserCreated          uuid.NullUUID  `db:"user_created" json:"userCreated"`
	DateCreated          null_v4.Time   `db:"date_created" json:"dateCreated"`
	UserUpdated          uuid.NullUUID  `db:"user_updated" json:"userUpdated"`
	DateUpdated          null_v4.Time   `db:"date_updated" json:"dateUpdated"`
	Title                string         `db:"title" json:"title"`
	TopicID              uuid.UUID      `db:"topic_id" json:"topicId"`
	Sort                 null_v4.Int    `db:"sort" json:"sort"`
	Description          null_v4.String `db:"description" json:"description"`
	TranslationsRequired bool           `db:"translations_required" json:"translationsRequired"`
}

type LessonsImage struct {
	ID       uuid.UUID `db:"id" json:"id"`
	LessonID uuid.UUID `db:"lesson_id" json:"lessonId"`
	File     uuid.UUID `db:"file" json:"file"`
	Language string    `db:"language" json:"language"`
	Style    string    `db:"style" json:"style"`
}

type LessonsRelation struct {
	ID         int32       `db:"id" json:"id"`
	LessonsID  uuid.UUID   `db:"lessons_id" json:"lessonsId"`
	Item       string      `db:"item" json:"item"`
	Sort       null_v4.Int `db:"sort" json:"sort"`
	Collection string      `db:"collection" json:"collection"`
}

type LessonsTranslation struct {
	ID            int32          `db:"id" json:"id"`
	LessonsID     uuid.UUID      `db:"lessons_id" json:"lessonsId"`
	LanguagesCode string         `db:"languages_code" json:"languagesCode"`
	Title         null_v4.String `db:"title" json:"title"`
	Description   null_v4.String `db:"description" json:"description"`
}

type Link struct {
	ID                     int32          `db:"id" json:"id"`
	Status                 string         `db:"status" json:"status"`
	UserCreated            uuid.NullUUID  `db:"user_created" json:"userCreated"`
	DateCreated            null_v4.Time   `db:"date_created" json:"dateCreated"`
	UserUpdated            uuid.NullUUID  `db:"user_updated" json:"userUpdated"`
	DateUpdated            null_v4.Time   `db:"date_updated" json:"dateUpdated"`
	Url                    string         `db:"url" json:"url"`
	Type                   null_v4.String `db:"type" json:"type"`
	ComputeddatagroupID    uuid.NullUUID  `db:"computeddatagroup_id" json:"computeddatagroupId"`
	Label                  null_v4.String `db:"label" json:"label"`
	RequiresAuthentication bool           `db:"requires_authentication" json:"requiresAuthentication"`
	TranslationsRequired   bool           `db:"translations_required" json:"translationsRequired"`
}

type LinksTranslation struct {
	ID            int32  `db:"id" json:"id"`
	LinksID       int32  `db:"links_id" json:"linksId"`
	LanguagesCode string `db:"languages_code" json:"languagesCode"`
	Title         string `db:"title" json:"title"`
	Description   string `db:"description" json:"description"`
}

type MaterializedViewsMetum struct {
	ViewName      string       `db:"view_name" json:"viewName"`
	LastRefreshed null_v4.Time `db:"last_refreshed" json:"lastRefreshed"`
}

type Mediaitem struct {
	ID                     uuid.UUID       `db:"id" json:"id"`
	UserCreated            uuid.NullUUID   `db:"user_created" json:"userCreated"`
	DateCreated            null_v4.Time    `db:"date_created" json:"dateCreated"`
	UserUpdated            uuid.NullUUID   `db:"user_updated" json:"userUpdated"`
	DateUpdated            null_v4.Time    `db:"date_updated" json:"dateUpdated"`
	Label                  string          `db:"label" json:"label"`
	Title                  null_v4.String  `db:"title" json:"title"`
	Description            null_v4.String  `db:"description" json:"description"`
	Type                   string          `db:"type" json:"type"`
	AssetID                null_v4.Int     `db:"asset_id" json:"assetId"`
	ParentEpisodeID        null_v4.Int     `db:"parent_episode_id" json:"parentEpisodeId"`
	ParentStartsAt         sql.NullFloat64 `db:"parent_starts_at" json:"parentStartsAt"`
	ParentEndsAt           sql.NullFloat64 `db:"parent_ends_at" json:"parentEndsAt"`
	PublishedAt            null_v4.Time    `db:"published_at" json:"publishedAt"`
	ProductionDate         null_v4.Time    `db:"production_date" json:"productionDate"`
	ParentID               uuid.NullUUID   `db:"parent_id" json:"parentId"`
	ContentType            null_v4.String  `db:"content_type" json:"contentType"`
	Audience               null_v4.String  `db:"audience" json:"audience"`
	AgeratingCode          null_v4.String  `db:"agerating_code" json:"ageratingCode"`
	TranslationsRequired   bool            `db:"translations_required" json:"translationsRequired"`
	TimedmetadataFromAsset bool            `db:"timedmetadata_from_asset" json:"timedmetadataFromAsset"`
	AvailableFrom          null_v4.Time    `db:"available_from" json:"availableFrom"`
	AvailableTo            null_v4.Time    `db:"available_to" json:"availableTo"`
	PrimaryEpisodeID       null_v4.Int     `db:"primary_episode_id" json:"primaryEpisodeId"`
}

type MediaitemsAsset struct {
	ID           int32     `db:"id" json:"id"`
	MediaitemsID uuid.UUID `db:"mediaitems_id" json:"mediaitemsId"`
	AssetsID     int32     `db:"assets_id" json:"assetsId"`
	Language     string    `db:"language" json:"language"`
}

type MediaitemsStyledimage struct {
	ID             int32         `db:"id" json:"id"`
	MediaitemsID   uuid.NullUUID `db:"mediaitems_id" json:"mediaitemsId"`
	StyledimagesID uuid.NullUUID `db:"styledimages_id" json:"styledimagesId"`
}

type MediaitemsTag struct {
	ID           int32         `db:"id" json:"id"`
	MediaitemsID uuid.NullUUID `db:"mediaitems_id" json:"mediaitemsId"`
	TagsID       null_v4.Int   `db:"tags_id" json:"tagsId"`
}

type MediaitemsTranslation struct {
	ID            int32          `db:"id" json:"id"`
	MediaitemsID  uuid.UUID      `db:"mediaitems_id" json:"mediaitemsId"`
	LanguagesCode string         `db:"languages_code" json:"languagesCode"`
	Title         null_v4.String `db:"title" json:"title"`
	Description   null_v4.String `db:"description" json:"description"`
}

type MediaitemsUsergroup struct {
	ID             int32     `db:"id" json:"id"`
	MediaitemsID   uuid.UUID `db:"mediaitems_id" json:"mediaitemsId"`
	UsergroupsCode string    `db:"usergroups_code" json:"usergroupsCode"`
}

type MediaitemsUsergroupsDownload struct {
	ID             int32     `db:"id" json:"id"`
	MediaitemsID   uuid.UUID `db:"mediaitems_id" json:"mediaitemsId"`
	UsergroupsCode string    `db:"usergroups_code" json:"usergroupsCode"`
}

type MediaitemsUsergroupsEarlyaccess struct {
	ID             int32     `db:"id" json:"id"`
	MediaitemsID   uuid.UUID `db:"mediaitems_id" json:"mediaitemsId"`
	UsergroupsCode string    `db:"usergroups_code" json:"usergroupsCode"`
}

type MediaitemsView struct {
	ID                   uuid.UUID       `db:"id" json:"id"`
	Assets               json.RawMessage `db:"assets" json:"assets"`
	AssetID              null_v4.Int     `db:"asset_id" json:"assetId"`
	OriginalTitle        null_v4.String  `db:"original_title" json:"originalTitle"`
	OriginalDescription  null_v4.String  `db:"original_description" json:"originalDescription"`
	Title                json.RawMessage `db:"title" json:"title"`
	Description          json.RawMessage `db:"description" json:"description"`
	Images               json.RawMessage `db:"images" json:"images"`
	ParentID             uuid.NullUUID   `db:"parent_id" json:"parentId"`
	ParentEpisodeID      null_v4.Int     `db:"parent_episode_id" json:"parentEpisodeId"`
	ParentStartsAt       sql.NullFloat64 `db:"parent_starts_at" json:"parentStartsAt"`
	ParentEndsAt         sql.NullFloat64 `db:"parent_ends_at" json:"parentEndsAt"`
	AvailableFrom        time.Time       `db:"available_from" json:"availableFrom"`
	AvailableTo          time.Time       `db:"available_to" json:"availableTo"`
	Label                string          `db:"label" json:"label"`
	AgeratingCode        null_v4.String  `db:"agerating_code" json:"ageratingCode"`
	Audience             null_v4.String  `db:"audience" json:"audience"`
	ContentType          null_v4.String  `db:"content_type" json:"contentType"`
	ProductionDate       time.Time       `db:"production_date" json:"productionDate"`
	PublishedAt          time.Time       `db:"published_at" json:"publishedAt"`
	TranslationsRequired bool            `db:"translations_required" json:"translationsRequired"`
	DateUpdated          null_v4.Time    `db:"date_updated" json:"dateUpdated"`
	Duration             null_v4.Int     `db:"duration" json:"duration"`
	AssetDateUpdated     null_v4.Time    `db:"asset_date_updated" json:"assetDateUpdated"`
	TagIds               []int32         `db:"tag_ids" json:"tagIds"`
	TimedmetadataIds     []uuid.UUID     `db:"timedmetadata_ids" json:"timedmetadataIds"`
}

type Message struct {
	ID          int32          `db:"id" json:"id"`
	Status      string         `db:"status" json:"status"`
	UserCreated uuid.NullUUID  `db:"user_created" json:"userCreated"`
	DateCreated null_v4.Time   `db:"date_created" json:"dateCreated"`
	UserUpdated uuid.NullUUID  `db:"user_updated" json:"userUpdated"`
	DateUpdated null_v4.Time   `db:"date_updated" json:"dateUpdated"`
	Enabled     sql.NullBool   `db:"enabled" json:"enabled"`
	Name        null_v4.String `db:"name" json:"name"`
}

type MessagesMessagetemplate struct {
	ID                 int32 `db:"id" json:"id"`
	MessagesID         int32 `db:"messages_id" json:"messagesId"`
	MessagetemplatesID int32 `db:"messagetemplates_id" json:"messagetemplatesId"`
}

type Messagetemplate struct {
	DateCreated null_v4.Time   `db:"date_created" json:"dateCreated"`
	DateUpdated null_v4.Time   `db:"date_updated" json:"dateUpdated"`
	ID          int32          `db:"id" json:"id"`
	Status      string         `db:"status" json:"status"`
	UserCreated uuid.NullUUID  `db:"user_created" json:"userCreated"`
	UserUpdated uuid.NullUUID  `db:"user_updated" json:"userUpdated"`
	Style       null_v4.String `db:"style" json:"style"`
}

type MessagetemplatesTranslation struct {
	Details            null_v4.String `db:"details" json:"details"`
	ID                 int32          `db:"id" json:"id"`
	LanguagesCode      string         `db:"languages_code" json:"languagesCode"`
	Message            string         `db:"message" json:"message"`
	MessagetemplatesID int32          `db:"messagetemplates_id" json:"messagetemplatesId"`
}

type Notification struct {
	ID                 uuid.UUID      `db:"id" json:"id"`
	Status             string         `db:"status" json:"status"`
	UserCreated        uuid.NullUUID  `db:"user_created" json:"userCreated"`
	DateCreated        null_v4.Time   `db:"date_created" json:"dateCreated"`
	UserUpdated        uuid.NullUUID  `db:"user_updated" json:"userUpdated"`
	DateUpdated        null_v4.Time   `db:"date_updated" json:"dateUpdated"`
	ScheduleAt         null_v4.Time   `db:"schedule_at" json:"scheduleAt"`
	SendStarted        null_v4.Time   `db:"send_started" json:"sendStarted"`
	SendCompleted      null_v4.Time   `db:"send_completed" json:"sendCompleted"`
	Action             null_v4.String `db:"action" json:"action"`
	DeepLink           null_v4.String `db:"deep_link" json:"deepLink"`
	TemplateID         uuid.NullUUID  `db:"template_id" json:"templateId"`
	HighPriority       bool           `db:"high_priority" json:"highPriority"`
	ApplicationgroupID uuid.NullUUID  `db:"applicationgroup_id" json:"applicationgroupId"`
}

type NotificationsTarget struct {
	ID              int32     `db:"id" json:"id"`
	NotificationsID uuid.UUID `db:"notifications_id" json:"notificationsId"`
	TargetsID       uuid.UUID `db:"targets_id" json:"targetsId"`
}

type Notificationtemplate struct {
	ID                   uuid.UUID      `db:"id" json:"id"`
	UserCreated          uuid.NullUUID  `db:"user_created" json:"userCreated"`
	DateCreated          null_v4.Time   `db:"date_created" json:"dateCreated"`
	UserUpdated          uuid.NullUUID  `db:"user_updated" json:"userUpdated"`
	DateUpdated          null_v4.Time   `db:"date_updated" json:"dateUpdated"`
	Label                null_v4.String `db:"label" json:"label"`
	TranslationsRequired bool           `db:"translations_required" json:"translationsRequired"`
}

type NotificationtemplatesTranslation struct {
	ID                      int32          `db:"id" json:"id"`
	NotificationtemplatesID uuid.UUID      `db:"notificationtemplates_id" json:"notificationtemplatesId"`
	LanguagesCode           string         `db:"languages_code" json:"languagesCode"`
	Title                   null_v4.String `db:"title" json:"title"`
	Description             null_v4.String `db:"description" json:"description"`
}

type Page struct {
	Code                 null_v4.String `db:"code" json:"code"`
	DateCreated          time.Time      `db:"date_created" json:"dateCreated"`
	DateUpdated          time.Time      `db:"date_updated" json:"dateUpdated"`
	ID                   int32          `db:"id" json:"id"`
	Sort                 null_v4.Int    `db:"sort" json:"sort"`
	Status               string         `db:"status" json:"status"`
	UserCreated          uuid.NullUUID  `db:"user_created" json:"userCreated"`
	UserUpdated          uuid.NullUUID  `db:"user_updated" json:"userUpdated"`
	Label                null_v4.String `db:"label" json:"label"`
	TranslationsRequired bool           `db:"translations_required" json:"translationsRequired"`
}

type PagesTranslation struct {
	Description   null_v4.String `db:"description" json:"description"`
	ID            int32          `db:"id" json:"id"`
	LanguagesCode string         `db:"languages_code" json:"languagesCode"`
	PagesID       int32          `db:"pages_id" json:"pagesId"`
	Title         null_v4.String `db:"title" json:"title"`
}

type Person struct {
	ID   uuid.UUID `db:"id" json:"id"`
	Name string    `db:"name" json:"name"`
}

type PersonsStyledimage struct {
	ID             int32     `db:"id" json:"id"`
	PersonsID      uuid.UUID `db:"persons_id" json:"personsId"`
	StyledimagesID uuid.UUID `db:"styledimages_id" json:"styledimagesId"`
}

type Phrase struct {
	Key         string        `db:"key" json:"key"`
	UserCreated uuid.NullUUID `db:"user_created" json:"userCreated"`
	DateCreated null_v4.Time  `db:"date_created" json:"dateCreated"`
	UserUpdated uuid.NullUUID `db:"user_updated" json:"userUpdated"`
	DateUpdated null_v4.Time  `db:"date_updated" json:"dateUpdated"`
	Value       string        `db:"value" json:"value"`
}

type PhrasesTranslation struct {
	ID            int32          `db:"id" json:"id"`
	PhrasesKey    string         `db:"phrases_key" json:"phrasesKey"`
	LanguagesCode string         `db:"languages_code" json:"languagesCode"`
	Value         null_v4.String `db:"value" json:"value"`
}

type Playlist struct {
	ID                   uuid.UUID      `db:"id" json:"id"`
	Status               string         `db:"status" json:"status"`
	UserCreated          uuid.NullUUID  `db:"user_created" json:"userCreated"`
	DateCreated          null_v4.Time   `db:"date_created" json:"dateCreated"`
	UserUpdated          uuid.NullUUID  `db:"user_updated" json:"userUpdated"`
	DateUpdated          null_v4.Time   `db:"date_updated" json:"dateUpdated"`
	Title                string         `db:"title" json:"title"`
	Description          null_v4.String `db:"description" json:"description"`
	CollectionID         null_v4.Int    `db:"collection_id" json:"collectionId"`
	TranslationsRequired bool           `db:"translations_required" json:"translationsRequired"`
}

type PlaylistsStyledimage struct {
	ID             int32         `db:"id" json:"id"`
	PlaylistsID    uuid.NullUUID `db:"playlists_id" json:"playlistsId"`
	StyledimagesID uuid.NullUUID `db:"styledimages_id" json:"styledimagesId"`
}

type PlaylistsTranslation struct {
	ID            int32          `db:"id" json:"id"`
	PlaylistsID   uuid.UUID      `db:"playlists_id" json:"playlistsId"`
	LanguagesCode string         `db:"languages_code" json:"languagesCode"`
	Title         null_v4.String `db:"title" json:"title"`
	Description   null_v4.String `db:"description" json:"description"`
}

type PlaylistsUsergroup struct {
	ID             int32     `db:"id" json:"id"`
	PlaylistsID    uuid.UUID `db:"playlists_id" json:"playlistsId"`
	UsergroupsCode string    `db:"usergroups_code" json:"usergroupsCode"`
}

type Prompt struct {
	ID             uuid.UUID      `db:"id" json:"id"`
	Status         string         `db:"status" json:"status"`
	UserCreated    uuid.NullUUID  `db:"user_created" json:"userCreated"`
	DateCreated    null_v4.Time   `db:"date_created" json:"dateCreated"`
	UserUpdated    uuid.NullUUID  `db:"user_updated" json:"userUpdated"`
	DateUpdated    null_v4.Time   `db:"date_updated" json:"dateUpdated"`
	Title          string         `db:"title" json:"title"`
	SecondaryTitle null_v4.String `db:"secondary_title" json:"secondaryTitle"`
	Type           string         `db:"type" json:"type"`
	SurveyID       uuid.NullUUID  `db:"survey_id" json:"surveyId"`
	From           time.Time      `db:"from" json:"from"`
	To             time.Time      `db:"to" json:"to"`
}

type PromptsTarget struct {
	ID        int32     `db:"id" json:"id"`
	PromptsID uuid.UUID `db:"prompts_id" json:"promptsId"`
	TargetsID uuid.UUID `db:"targets_id" json:"targetsId"`
}

type PromptsTranslation struct {
	ID             int32          `db:"id" json:"id"`
	PromptsID      uuid.UUID      `db:"prompts_id" json:"promptsId"`
	LanguagesCode  string         `db:"languages_code" json:"languagesCode"`
	Title          null_v4.String `db:"title" json:"title"`
	SecondaryTitle null_v4.String `db:"secondary_title" json:"secondaryTitle"`
}

type Questionalternative struct {
	ID        uuid.UUID      `db:"id" json:"id"`
	TaskID    uuid.NullUUID  `db:"task_id" json:"taskId"`
	Sort      null_v4.Int    `db:"sort" json:"sort"`
	Title     null_v4.String `db:"title" json:"title"`
	IsCorrect bool           `db:"is_correct" json:"isCorrect"`
}

type QuestionalternativesTranslation struct {
	ID                     int32          `db:"id" json:"id"`
	QuestionalternativesID uuid.UUID      `db:"questionalternatives_id" json:"questionalternativesId"`
	LanguagesCode          string         `db:"languages_code" json:"languagesCode"`
	Title                  null_v4.String `db:"title" json:"title"`
}

type Redirect struct {
	ID                     uuid.UUID    `db:"id" json:"id"`
	Status                 string       `db:"status" json:"status"`
	UserCreated            uuid.UUID    `db:"user_created" json:"userCreated"`
	DateCreated            null_v4.Time `db:"date_created" json:"dateCreated"`
	UserUpdated            uuid.UUID    `db:"user_updated" json:"userUpdated"`
	DateUpdated            null_v4.Time `db:"date_updated" json:"dateUpdated"`
	TargetUrl              string       `db:"target_url" json:"targetUrl"`
	Code                   string       `db:"code" json:"code"`
	IncludeToken           sql.NullBool `db:"include_token" json:"includeToken"`
	RequiresAuthentication bool         `db:"requires_authentication" json:"requiresAuthentication"`
}

type Season struct {
	AgeratingCode        null_v4.String `db:"agerating_code" json:"ageratingCode"`
	AvailableFrom        null_v4.Time   `db:"available_from" json:"availableFrom"`
	AvailableTo          null_v4.Time   `db:"available_to" json:"availableTo"`
	DateCreated          time.Time      `db:"date_created" json:"dateCreated"`
	DateUpdated          time.Time      `db:"date_updated" json:"dateUpdated"`
	ID                   int32          `db:"id" json:"id"`
	ImageFileID          uuid.NullUUID  `db:"image_file_id" json:"imageFileId"`
	LegacyDescriptionID  null_v4.Int    `db:"legacy_description_id" json:"legacyDescriptionId"`
	LegacyID             null_v4.Int    `db:"legacy_id" json:"legacyId"`
	LegacyTitleID        null_v4.Int    `db:"legacy_title_id" json:"legacyTitleId"`
	PublishDate          time.Time      `db:"publish_date" json:"publishDate"`
	SeasonNumber         int32          `db:"season_number" json:"seasonNumber"`
	ShowID               int32          `db:"show_id" json:"showId"`
	Status               string         `db:"status" json:"status"`
	UserCreated          uuid.NullUUID  `db:"user_created" json:"userCreated"`
	UserUpdated          uuid.NullUUID  `db:"user_updated" json:"userUpdated"`
	Label                null_v4.String `db:"label" json:"label"`
	PublicTitle          null_v4.String `db:"public_title" json:"publicTitle"`
	EpisodeNumberInTitle sql.NullBool   `db:"episode_number_in_title" json:"episodeNumberInTitle"`
	Uuid                 uuid.UUID      `db:"uuid" json:"uuid"`
	TranslationsRequired bool           `db:"translations_required" json:"translationsRequired"`
}

type SeasonAvailability struct {
	ID            int32        `db:"id" json:"id"`
	Published     sql.NullBool `db:"published" json:"published"`
	AvailableFrom interface{}  `db:"available_from" json:"availableFrom"`
	AvailableTo   interface{}  `db:"available_to" json:"availableTo"`
}

type SeasonRole struct {
	ID               int32       `db:"id" json:"id"`
	Roles            interface{} `db:"roles" json:"roles"`
	RolesDownload    interface{} `db:"roles_download" json:"rolesDownload"`
	RolesEarlyaccess interface{} `db:"roles_earlyaccess" json:"rolesEarlyaccess"`
}

type SeasonsTag struct {
	ID        int32       `db:"id" json:"id"`
	SeasonsID null_v4.Int `db:"seasons_id" json:"seasonsId"`
	TagsID    null_v4.Int `db:"tags_id" json:"tagsId"`
}

type SeasonsTranslation struct {
	Description         null_v4.String `db:"description" json:"description"`
	ID                  int32          `db:"id" json:"id"`
	IsPrimary           bool           `db:"is_primary" json:"isPrimary"`
	LanguagesCode       string         `db:"languages_code" json:"languagesCode"`
	LegacyDescriptionID null_v4.Int    `db:"legacy_description_id" json:"legacyDescriptionId"`
	LegacyTitleID       null_v4.Int    `db:"legacy_title_id" json:"legacyTitleId"`
	SeasonsID           int32          `db:"seasons_id" json:"seasonsId"`
	Title               null_v4.String `db:"title" json:"title"`
}

type SeasonsUsergroup struct {
	ID             int32  `db:"id" json:"id"`
	SeasonsID      int32  `db:"seasons_id" json:"seasonsId"`
	UsergroupsCode string `db:"usergroups_code" json:"usergroupsCode"`
}

type Section struct {
	CollectionID         null_v4.Int     `db:"collection_id" json:"collectionId"`
	DateCreated          time.Time       `db:"date_created" json:"dateCreated"`
	DateUpdated          time.Time       `db:"date_updated" json:"dateUpdated"`
	ID                   int32           `db:"id" json:"id"`
	Status               string          `db:"status" json:"status"`
	UserCreated          uuid.NullUUID   `db:"user_created" json:"userCreated"`
	UserUpdated          uuid.NullUUID   `db:"user_updated" json:"userUpdated"`
	PageID               null_v4.Int     `db:"page_id" json:"pageId"`
	Sort                 null_v4.Int     `db:"sort" json:"sort"`
	Style                null_v4.String  `db:"style" json:"style"`
	Size                 null_v4.String  `db:"size" json:"size"`
	GridSize             null_v4.String  `db:"grid_size" json:"gridSize"`
	Type                 null_v4.String  `db:"type" json:"type"`
	ShowTitle            sql.NullBool    `db:"show_title" json:"showTitle"`
	MessageID            null_v4.Int     `db:"message_id" json:"messageId"`
	NeedsAuthentication  sql.NullBool    `db:"needs_authentication" json:"needsAuthentication"`
	EmbedUrl             null_v4.String  `db:"embed_url" json:"embedUrl"`
	SecondaryTitles      sql.NullBool    `db:"secondary_titles" json:"secondaryTitles"`
	UseContext           sql.NullBool    `db:"use_context" json:"useContext"`
	EmbedAspectRatio     sql.NullFloat64 `db:"embed_aspect_ratio" json:"embedAspectRatio"`
	EmbedHeight          null_v4.Int     `db:"embed_height" json:"embedHeight"`
	PrependLiveElement   sql.NullBool    `db:"prepend_live_element" json:"prependLiveElement"`
	TranslationsRequired bool            `db:"translations_required" json:"translationsRequired"`
	Limit                null_v4.Int     `db:"limit" json:"limit"`
}

type SectionsTranslation struct {
	ID            int32          `db:"id" json:"id"`
	LanguagesCode string         `db:"languages_code" json:"languagesCode"`
	SectionsID    int32          `db:"sections_id" json:"sectionsId"`
	Title         null_v4.String `db:"title" json:"title"`
	Description   null_v4.String `db:"description" json:"description"`
}

type SectionsUsergroup struct {
	ID             int32  `db:"id" json:"id"`
	SectionsID     int32  `db:"sections_id" json:"sectionsId"`
	UsergroupsCode string `db:"usergroups_code" json:"usergroupsCode"`
}

type Short struct {
	ID          uuid.UUID     `db:"id" json:"id"`
	Status      string        `db:"status" json:"status"`
	UserCreated uuid.NullUUID `db:"user_created" json:"userCreated"`
	DateCreated null_v4.Time  `db:"date_created" json:"dateCreated"`
	UserUpdated uuid.NullUUID `db:"user_updated" json:"userUpdated"`
	DateUpdated null_v4.Time  `db:"date_updated" json:"dateUpdated"`
	MediaitemID uuid.NullUUID `db:"mediaitem_id" json:"mediaitemId"`
}

type ShortsUsergroup struct {
	ID             int32          `db:"id" json:"id"`
	ShortsID       uuid.NullUUID  `db:"shorts_id" json:"shortsId"`
	UsergroupsCode null_v4.String `db:"usergroups_code" json:"usergroupsCode"`
}

type Show struct {
	AgeratingCode           null_v4.String `db:"agerating_code" json:"ageratingCode"`
	AvailableFrom           null_v4.Time   `db:"available_from" json:"availableFrom"`
	AvailableTo             null_v4.Time   `db:"available_to" json:"availableTo"`
	DateCreated             time.Time      `db:"date_created" json:"dateCreated"`
	DateUpdated             time.Time      `db:"date_updated" json:"dateUpdated"`
	ID                      int32          `db:"id" json:"id"`
	ImageFileID             uuid.NullUUID  `db:"image_file_id" json:"imageFileId"`
	LegacyDescriptionID     null_v4.Int    `db:"legacy_description_id" json:"legacyDescriptionId"`
	LegacyID                null_v4.Int    `db:"legacy_id" json:"legacyId"`
	LegacyTitleID           null_v4.Int    `db:"legacy_title_id" json:"legacyTitleId"`
	PublishDate             time.Time      `db:"publish_date" json:"publishDate"`
	Status                  string         `db:"status" json:"status"`
	Type                    string         `db:"type" json:"type"`
	UserCreated             uuid.NullUUID  `db:"user_created" json:"userCreated"`
	UserUpdated             uuid.NullUUID  `db:"user_updated" json:"userUpdated"`
	DefaultEpisodeBehaviour null_v4.String `db:"default_episode_behaviour" json:"defaultEpisodeBehaviour"`
	PublishDateInTitle      sql.NullBool   `db:"publish_date_in_title" json:"publishDateInTitle"`
	Label                   null_v4.String `db:"label" json:"label"`
	PublicTitle             null_v4.String `db:"public_title" json:"publicTitle"`
	Uuid                    uuid.UUID      `db:"uuid" json:"uuid"`
	RelatedCollectionID     null_v4.Int    `db:"related_collection_id" json:"relatedCollectionId"`
	TranslationsRequired    bool           `db:"translations_required" json:"translationsRequired"`
}

type ShowAvailability struct {
	ID            int32        `db:"id" json:"id"`
	Published     bool         `db:"published" json:"published"`
	AvailableFrom null_v4.Time `db:"available_from" json:"availableFrom"`
	AvailableTo   null_v4.Time `db:"available_to" json:"availableTo"`
}

type ShowRole struct {
	ID               int32       `db:"id" json:"id"`
	Roles            interface{} `db:"roles" json:"roles"`
	RolesDownload    interface{} `db:"roles_download" json:"rolesDownload"`
	RolesEarlyaccess interface{} `db:"roles_earlyaccess" json:"rolesEarlyaccess"`
}

type ShowsTag struct {
	ID      int32 `db:"id" json:"id"`
	ShowsID int32 `db:"shows_id" json:"showsId"`
	TagsID  int32 `db:"tags_id" json:"tagsId"`
}

type ShowsTranslation struct {
	Description         null_v4.String `db:"description" json:"description"`
	ID                  int32          `db:"id" json:"id"`
	IsPrimary           bool           `db:"is_primary" json:"isPrimary"`
	LanguagesCode       string         `db:"languages_code" json:"languagesCode"`
	LegacyDescriptionID null_v4.Int    `db:"legacy_description_id" json:"legacyDescriptionId"`
	LegacyTags          null_v4.String `db:"legacy_tags" json:"legacyTags"`
	LegacyTagsID        null_v4.Int    `db:"legacy_tags_id" json:"legacyTagsId"`
	LegacyTitleID       null_v4.Int    `db:"legacy_title_id" json:"legacyTitleId"`
	ShowsID             int32          `db:"shows_id" json:"showsId"`
	Title               null_v4.String `db:"title" json:"title"`
}

type ShowsUsergroup struct {
	ID             int32  `db:"id" json:"id"`
	ShowsID        int32  `db:"shows_id" json:"showsId"`
	UsergroupsCode string `db:"usergroups_code" json:"usergroupsCode"`
}

type Song struct {
	ID           uuid.UUID `db:"id" json:"id"`
	CollectionID uuid.UUID `db:"collection_id" json:"collectionId"`
	Title        string    `db:"title" json:"title"`
	Key          string    `db:"key" json:"key"`
}

type Songcollection struct {
	ID    uuid.UUID      `db:"id" json:"id"`
	Title null_v4.String `db:"title" json:"title"`
	Key   string         `db:"key" json:"key"`
}

type SongcollectionsTranslation struct {
	ID                int32          `db:"id" json:"id"`
	SongcollectionsID uuid.UUID      `db:"songcollections_id" json:"songcollectionsId"`
	LanguagesCode     string         `db:"languages_code" json:"languagesCode"`
	Title             null_v4.String `db:"title" json:"title"`
}

type SongsTranslation struct {
	ID            int32     `db:"id" json:"id"`
	SongsID       uuid.UUID `db:"songs_id" json:"songsId"`
	LanguagesCode string    `db:"languages_code" json:"languagesCode"`
	Title         string    `db:"title" json:"title"`
}

type StatsMembersDatum struct {
	ID       int32  `db:"id" json:"id"`
	AgeGroup string `db:"age_group" json:"ageGroup"`
	OrgID    int32  `db:"org_id" json:"orgId"`
}

type StatsOrg struct {
	ID   int32  `db:"id" json:"id"`
	Name string `db:"name" json:"name"`
	Type string `db:"type" json:"type"`
}

type StatsOrgCount struct {
	OrgID        int32  `db:"org_id" json:"orgId"`
	CountPersons int32  `db:"count_persons" json:"countPersons"`
	AgeGroup     string `db:"age_group" json:"ageGroup"`
}

type Studytopic struct {
	ID                   uuid.UUID      `db:"id" json:"id"`
	Status               string         `db:"status" json:"status"`
	UserCreated          uuid.NullUUID  `db:"user_created" json:"userCreated"`
	DateCreated          null_v4.Time   `db:"date_created" json:"dateCreated"`
	UserUpdated          uuid.NullUUID  `db:"user_updated" json:"userUpdated"`
	DateUpdated          null_v4.Time   `db:"date_updated" json:"dateUpdated"`
	Title                string         `db:"title" json:"title"`
	Description          null_v4.String `db:"description" json:"description"`
	TranslationsRequired bool           `db:"translations_required" json:"translationsRequired"`
}

type StudytopicsImage struct {
	ID       uuid.UUID      `db:"id" json:"id"`
	TopicID  uuid.UUID      `db:"topic_id" json:"topicId"`
	File     uuid.UUID      `db:"file" json:"file"`
	Language string         `db:"language" json:"language"`
	Style    null_v4.String `db:"style" json:"style"`
}

type StudytopicsTranslation struct {
	ID            int32          `db:"id" json:"id"`
	StudytopicsID uuid.UUID      `db:"studytopics_id" json:"studytopicsId"`
	LanguagesCode string         `db:"languages_code" json:"languagesCode"`
	Title         null_v4.String `db:"title" json:"title"`
	Description   null_v4.String `db:"description" json:"description"`
}

type Styledimage struct {
	ID          uuid.UUID     `db:"id" json:"id"`
	UserCreated uuid.NullUUID `db:"user_created" json:"userCreated"`
	DateCreated null_v4.Time  `db:"date_created" json:"dateCreated"`
	UserUpdated uuid.NullUUID `db:"user_updated" json:"userUpdated"`
	DateUpdated null_v4.Time  `db:"date_updated" json:"dateUpdated"`
	Style       string        `db:"style" json:"style"`
	Language    string        `db:"language" json:"language"`
	File        uuid.UUID     `db:"file" json:"file"`
}

type Survey struct {
	ID                   uuid.UUID      `db:"id" json:"id"`
	Status               string         `db:"status" json:"status"`
	UserCreated          uuid.NullUUID  `db:"user_created" json:"userCreated"`
	DateCreated          null_v4.Time   `db:"date_created" json:"dateCreated"`
	UserUpdated          uuid.NullUUID  `db:"user_updated" json:"userUpdated"`
	DateUpdated          null_v4.Time   `db:"date_updated" json:"dateUpdated"`
	Description          null_v4.String `db:"description" json:"description"`
	Title                string         `db:"title" json:"title"`
	TranslationsRequired bool           `db:"translations_required" json:"translationsRequired"`
}

type Surveyquestion struct {
	ID          uuid.UUID      `db:"id" json:"id"`
	UserCreated uuid.NullUUID  `db:"user_created" json:"userCreated"`
	DateCreated null_v4.Time   `db:"date_created" json:"dateCreated"`
	UserUpdated uuid.NullUUID  `db:"user_updated" json:"userUpdated"`
	DateUpdated null_v4.Time   `db:"date_updated" json:"dateUpdated"`
	Title       string         `db:"title" json:"title"`
	Description null_v4.String `db:"description" json:"description"`
	Type        string         `db:"type" json:"type"`
	SurveyID    uuid.UUID      `db:"survey_id" json:"surveyId"`
	Sort        null_v4.Int    `db:"sort" json:"sort"`
	Placeholder null_v4.String `db:"placeholder" json:"placeholder"`
}

type SurveyquestionsTranslation struct {
	ID                int32          `db:"id" json:"id"`
	SurveyquestionsID uuid.UUID      `db:"surveyquestions_id" json:"surveyquestionsId"`
	LanguagesCode     string         `db:"languages_code" json:"languagesCode"`
	Title             null_v4.String `db:"title" json:"title"`
	Description       null_v4.String `db:"description" json:"description"`
	Placeholder       null_v4.String `db:"placeholder" json:"placeholder"`
}

type SurveysTranslation struct {
	ID            int32          `db:"id" json:"id"`
	SurveysID     uuid.UUID      `db:"surveys_id" json:"surveysId"`
	LanguagesCode string         `db:"languages_code" json:"languagesCode"`
	Title         null_v4.String `db:"title" json:"title"`
	Description   null_v4.String `db:"description" json:"description"`
}

type Tag struct {
	Code        null_v4.String `db:"code" json:"code"`
	DateCreated time.Time      `db:"date_created" json:"dateCreated"`
	DateUpdated time.Time      `db:"date_updated" json:"dateUpdated"`
	ID          int32          `db:"id" json:"id"`
	Name        string         `db:"name" json:"name"`
	UserCreated uuid.NullUUID  `db:"user_created" json:"userCreated"`
	UserUpdated uuid.NullUUID  `db:"user_updated" json:"userUpdated"`
}

type TagsTranslation struct {
	ID            int32          `db:"id" json:"id"`
	LanguagesCode string         `db:"languages_code" json:"languagesCode"`
	Name          null_v4.String `db:"name" json:"name"`
	TagsID        int32          `db:"tags_id" json:"tagsId"`
}

type Target struct {
	ID    uuid.UUID      `db:"id" json:"id"`
	Label null_v4.String `db:"label" json:"label"`
	Type  string         `db:"type" json:"type"`
}

type TargetsUsergroup struct {
	ID             int32     `db:"id" json:"id"`
	TargetsID      uuid.UUID `db:"targets_id" json:"targetsId"`
	UsergroupsCode string    `db:"usergroups_code" json:"usergroupsCode"`
}

type Task struct {
	ID                      uuid.UUID      `db:"id" json:"id"`
	Status                  string         `db:"status" json:"status"`
	UserCreated             uuid.NullUUID  `db:"user_created" json:"userCreated"`
	DateCreated             null_v4.Time   `db:"date_created" json:"dateCreated"`
	UserUpdated             uuid.NullUUID  `db:"user_updated" json:"userUpdated"`
	DateUpdated             null_v4.Time   `db:"date_updated" json:"dateUpdated"`
	Type                    string         `db:"type" json:"type"`
	QuestionType            null_v4.String `db:"question_type" json:"questionType"`
	Sort                    null_v4.Int    `db:"sort" json:"sort"`
	LessonID                uuid.UUID      `db:"lesson_id" json:"lessonId"`
	Title                   null_v4.String `db:"title" json:"title"`
	AlternativesMultiselect sql.NullBool   `db:"alternatives_multiselect" json:"alternativesMultiselect"`
	EpisodeID               null_v4.Int    `db:"episode_id" json:"episodeId"`
	ImageType               null_v4.String `db:"image_type" json:"imageType"`
	SecondaryTitle          null_v4.String `db:"secondary_title" json:"secondaryTitle"`
	Description             null_v4.String `db:"description" json:"description"`
	LinkID                  null_v4.Int    `db:"link_id" json:"linkId"`
	CompetitionMode         sql.NullBool   `db:"competition_mode" json:"competitionMode"`
	TranslationsRequired    bool           `db:"translations_required" json:"translationsRequired"`
}

type TasksImage struct {
	ID       uuid.UUID `db:"id" json:"id"`
	Image    uuid.UUID `db:"image" json:"image"`
	Language string    `db:"language" json:"language"`
	TaskID   uuid.UUID `db:"task_id" json:"taskId"`
}

type TasksTranslation struct {
	ID             int32          `db:"id" json:"id"`
	TasksID        uuid.UUID      `db:"tasks_id" json:"tasksId"`
	LanguagesCode  string         `db:"languages_code" json:"languagesCode"`
	Title          null_v4.String `db:"title" json:"title"`
	SecondaryTitle null_v4.String `db:"secondary_title" json:"secondaryTitle"`
	Description    null_v4.String `db:"description" json:"description"`
}

type TimedmetadataPerson struct {
	ID              int32     `db:"id" json:"id"`
	TimedmetadataID uuid.UUID `db:"timedmetadata_id" json:"timedmetadataId"`
	PersonsID       uuid.UUID `db:"persons_id" json:"personsId"`
}

type TimedmetadataStyledimage struct {
	ID              int32         `db:"id" json:"id"`
	TimedmetadataID uuid.NullUUID `db:"timedmetadata_id" json:"timedmetadataId"`
	StyledimagesID  uuid.NullUUID `db:"styledimages_id" json:"styledimagesId"`
}

type TimedmetadataTranslation struct {
	ID              int32          `db:"id" json:"id"`
	TimedmetadataID uuid.UUID      `db:"timedmetadata_id" json:"timedmetadataId"`
	LanguagesCode   string         `db:"languages_code" json:"languagesCode"`
	Title           null_v4.String `db:"title" json:"title"`
	Description     null_v4.String `db:"description" json:"description"`
}

type Timedmetadatum struct {
	ID          uuid.UUID      `db:"id" json:"id"`
	Status      string         `db:"status" json:"status"`
	UserCreated uuid.NullUUID  `db:"user_created" json:"userCreated"`
	DateCreated null_v4.Time   `db:"date_created" json:"dateCreated"`
	UserUpdated uuid.NullUUID  `db:"user_updated" json:"userUpdated"`
	DateUpdated null_v4.Time   `db:"date_updated" json:"dateUpdated"`
	Label       string         `db:"label" json:"label"`
	Type        string         `db:"type" json:"type"`
	Highlight   bool           `db:"highlight" json:"highlight"`
	Title       null_v4.String `db:"title" json:"title"`
	Description null_v4.String `db:"description" json:"description"`
	AssetID     null_v4.Int    `db:"asset_id" json:"assetId"`
	EpisodeID   null_v4.Int    `db:"episode_id" json:"episodeId"`
	ContentType null_v4.String `db:"content_type" json:"contentType"`
	SongID      uuid.NullUUID  `db:"song_id" json:"songId"`
	Seconds     float32        `db:"seconds" json:"seconds"`
	MediaitemID uuid.NullUUID  `db:"mediaitem_id" json:"mediaitemId"`
}

type Usergroup struct {
	Code                string         `db:"code" json:"code"`
	DateCreated         time.Time      `db:"date_created" json:"dateCreated"`
	DateUpdated         time.Time      `db:"date_updated" json:"dateUpdated"`
	Emails              null_v4.String `db:"emails" json:"emails"`
	Name                string         `db:"name" json:"name"`
	Sort                null_v4.Int    `db:"sort" json:"sort"`
	UserCreated         uuid.NullUUID  `db:"user_created" json:"userCreated"`
	UserUpdated         uuid.NullUUID  `db:"user_updated" json:"userUpdated"`
	ExplicitlyAvailable bool           `db:"explicitly_available" json:"explicitlyAvailable"`
}

type UsersAchievement struct {
	ProfileID     uuid.UUID    `db:"profile_id" json:"profileId"`
	AchievementID uuid.UUID    `db:"achievement_id" json:"achievementId"`
	AchievedAt    time.Time    `db:"achieved_at" json:"achievedAt"`
	ConditionIds  []uuid.UUID  `db:"condition_ids" json:"conditionIds"`
	ConfirmedAt   null_v4.Time `db:"confirmed_at" json:"confirmedAt"`
}

type UsersCollection struct {
	ID                 uuid.UUID `db:"id" json:"id"`
	ProfileID          uuid.UUID `db:"profile_id" json:"profileId"`
	UpdatedAt          time.Time `db:"updated_at" json:"updatedAt"`
	CreatedAt          time.Time `db:"created_at" json:"createdAt"`
	MyList             bool      `db:"my_list" json:"myList"`
	Title              string    `db:"title" json:"title"`
	ApplicationgroupID uuid.UUID `db:"applicationgroup_id" json:"applicationgroupId"`
}

type UsersCollectionentry struct {
	ID           uuid.UUID `db:"id" json:"id"`
	CollectionID uuid.UUID `db:"collection_id" json:"collectionId"`
	Sort         int32     `db:"sort" json:"sort"`
	Type         string    `db:"type" json:"type"`
	ItemID       uuid.UUID `db:"item_id" json:"itemId"`
	CreatedAt    time.Time `db:"created_at" json:"createdAt"`
	UpdatedAt    time.Time `db:"updated_at" json:"updatedAt"`
}

type UsersDevice struct {
	Token     string    `db:"token" json:"token"`
	ProfileID uuid.UUID `db:"profile_id" json:"profileId"`
	UpdatedAt time.Time `db:"updated_at" json:"updatedAt"`
	Name      string    `db:"name" json:"name"`
	Languages []string  `db:"languages" json:"languages"`
}

type UsersMediaProgress struct {
	ProfileID uuid.UUID             `db:"profile_id" json:"profileId"`
	ItemID    uuid.UUID             `db:"item_id" json:"itemId"`
	Progress  float32               `db:"progress" json:"progress"`
	Duration  float32               `db:"duration" json:"duration"`
	Watched   int32                 `db:"watched" json:"watched"`
	UpdatedAt time.Time             `db:"updated_at" json:"updatedAt"`
	Context   pqtype.NullRawMessage `db:"context" json:"context"`
	WatchedAt null_v4.Time          `db:"watched_at" json:"watchedAt"`
	FromStart bool                  `db:"from_start" json:"fromStart"`
}

type UsersMessage struct {
	ID        string                `db:"id" json:"id"`
	Message   string                `db:"message" json:"message"`
	ItemID    uuid.UUID             `db:"item_id" json:"itemId"`
	CreatedAt time.Time             `db:"created_at" json:"createdAt"`
	UpdatedAt null_v4.Time          `db:"updated_at" json:"updatedAt"`
	Metadata  pqtype.NullRawMessage `db:"metadata" json:"metadata"`
	AgeGroup  null_v4.String        `db:"age_group" json:"ageGroup"`
	OrgID     null_v4.Int           `db:"org_id" json:"orgId"`
}

type UsersProfile struct {
	ID                 uuid.UUID `db:"id" json:"id"`
	UserID             string    `db:"user_id" json:"userId"`
	Name               string    `db:"name" json:"name"`
	ApplicationgroupID uuid.UUID `db:"applicationgroup_id" json:"applicationgroupId"`
}

type UsersProgress struct {
	ProfileID uuid.UUID             `db:"profile_id" json:"profileId"`
	EpisodeID int32                 `db:"episode_id" json:"episodeId"`
	Progress  int32                 `db:"progress" json:"progress"`
	Duration  int32                 `db:"duration" json:"duration"`
	UpdatedAt time.Time             `db:"updated_at" json:"updatedAt"`
	ShowID    null_v4.Int           `db:"show_id" json:"showId"`
	Watched   null_v4.Int           `db:"watched" json:"watched"`
	WatchedAt null_v4.Time          `db:"watched_at" json:"watchedAt"`
	Context   pqtype.NullRawMessage `db:"context" json:"context"`
}

type UsersSubscription struct {
	Key       string    `db:"key" json:"key"`
	ProfileID uuid.UUID `db:"profile_id" json:"profileId"`
}

type UsersSurveyquestionanswer struct {
	ProfileID  uuid.UUID `db:"profile_id" json:"profileId"`
	QuestionID uuid.UUID `db:"question_id" json:"questionId"`
	UpdatedAt  time.Time `db:"updated_at" json:"updatedAt"`
}

type UsersTaskanswer struct {
	ProfileID            uuid.UUID    `db:"profile_id" json:"profileId"`
	TaskID               uuid.UUID    `db:"task_id" json:"taskId"`
	UpdatedAt            null_v4.Time `db:"updated_at" json:"updatedAt"`
	SelectedAlternatives interface{}  `db:"selected_alternatives" json:"selectedAlternatives"`
	Locked               bool         `db:"locked" json:"locked"`
}

type UsersUser struct {
	ID            string      `db:"id" json:"id"`
	Email         string      `db:"email" json:"email"`
	DisplayName   string      `db:"display_name" json:"displayName"`
	Age           int32       `db:"age" json:"age"`
	ChurchIds     interface{} `db:"church_ids" json:"churchIds"`
	ActiveBcc     bool        `db:"active_bcc" json:"activeBcc"`
	Roles         interface{} `db:"roles" json:"roles"`
	AgeGroup      string      `db:"age_group" json:"ageGroup"`
	UpdatedAt     time.Time   `db:"updated_at" json:"updatedAt"`
	EmailVerified bool        `db:"email_verified" json:"emailVerified"`
	Gender        string      `db:"gender" json:"gender"`
	FirstName     string      `db:"first_name" json:"firstName"`
}
